module HelloWorld

type ClosureData class {
	
}

func main() int32 {

	type TestBytes class {
		a, b byte
		c int
	}
	
	type Test class {
		c TestBytes
		a, b int
	}
	
	/* impl Test {
		
		func GetA() int {
			return a
		}
		
		func mut SetA(a int) {
			@a = a
		}
		// func mut setA(a int){ @a = a; }
		
		static {
			
		}
	} */
	
	let mut t = Test{TestBytes{1, 2, 3}, 300, 600}
	// t.c.b = 10
	// t.c.c = t.GetA()
	// t.b = 500
	
	// t = Test{a=400, b=700}

	type a [10]byte
	let mut i = sizeof a[2]
	i = sizeof t
	i = sizeof Test
	i = sizeof t.c.c
	i = sizeof Test.a
	i = 10i8 + 8u16
	
	// let k
	let j = i + 2.5 + t.b
	
	let f = func() ? {
		return 3
	}
	
	func getArr() ? {
		let arr [4]int32
		arr[1] = 1000
		return arr
	}
	
	let arr [10][4]int32
	arr[5] = getArr()
	
	let arr2 = arr
	
	/*
	let j unsafe * mut int = unsafe & i
	let v & mut int = i
	v = 5
	&v = 8
	*/
	return (arr2[5][1] + j + f()) as int32
}
