/* Generated by re2c 0.13.5 on Mon Aug 03 01:22:49 2015 */
#include "yoparser.h"

// #define YYPARSE_PARAM parm
// #define YYLEX_PARAM parm

// #define YY_DECL int yolex(YYSTYPE *lvalp)

#ifdef YYDEBUG
#undef YYDEBUG
#endif

#if 1
# define YYDEBUG(s, c) printf("state: %d char: %c\n", s, c)
#else
# define YYDEBUG(s, c)
#endif

// #include "yolang-y.h"

#define YYCTYPE   unsigned char
#define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + YO_LEX_MAXFILL)) { return 0; } }
#define YYCURSOR  parser->cursor
#define YYLIMIT   parser->limit
#define YYMARKER  parser->marker

#if 0
#define YYGETSTATE()  parser->state
#define YYSETSTATE(s) parser->state = s
#define yych		 parser->ch
#define yyaccept	 parser->accept
#endif

#define YYGETCONDITION()  parser->state
#define YYSETCONDITION(c) parser->state = c

#define STATE(name)  YO_##name

/* emulate flex constructs */
#define BEGIN(state) YYSETSTATE(STATE(state))
#define YYSTATE      YYGETSTATE()
#define yytext       parser->text
#define yyleng       parser->textLen
#define yyless(x)    do { YYCURSOR = (YYCTYPE*)yytext + x; yyleng = (int)x; } while(0)
#define yymore()     goto yymore_restart

/* perform sanity check. If this message is triggered you should
   increase the YO_LEX_MAXFILL value in the zend_streams.h file */
#define YYMAXFILL 10
#if YO_LEX_MAXFILL < YYMAXFILL
# error YO_LEX_MAXFILL should be greater than or equal to YYMAXFILL
#endif 

int yoLexDec(void*, YYSTYPE*);
int yoLexBin(void*, YYSTYPE*);
int yoLexHex(void*, YYSTYPE*);
int yoLexFloat(void*, YYSTYPE*);
int yoLexName(void*, YYSTYPE*);
int yoLexChar(void*, YYSTYPE*);
void yoLexLineComment(void*);
void yoLexMultiLineComment(void*);
void yoLexNewLine(void*);
int yoLexSingleQuotedString(void * parm, YYSTYPE * elem);
int yoLexQuotedString(void * parm, YYSTYPE * elem);
int yoLexInjectOpenBrace(void * parm, YYSTYPE*);
int yoLexInjectCloseBrace(void * parm, YYSTYPE*);
// void yoLexPushState(void * parm, int state);
// void yoLexPopState(void * parm, int state);

int yolex(YYSTYPE * parserNode, void * parm)
{
	YoParserParams * parser = (YoParserParams*)parm;
	// YYMARKER = YYCURSOR;
	
restart:
	yytext = YYCURSOR;

// yymore_restart:

	// -f option
	// YYCTYPE yych;
	// unsigned int yyaccept = 0;
	

{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	if (YYGETCONDITION() < 1) {
		goto yyc_ST_INJECT;
	} else {
		goto yyc_ST_IN_YOLANG;
	}
/* *********************************** */
yyc_ST_INJECT:
	{
		static const unsigned char yybm[] = {
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0, 128,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			128,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			120, 120, 104, 104, 104, 104, 104, 104, 
			104, 104,   0,   0,   0,   0,   0,   0, 
			 64,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			  0,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
		};

		YYFILL(10);
		yych = *YYCURSOR;
		switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x1F:
		case '#':
		case '$':
		case '(':
		case ')':
		case ',':
		case ';':
		case '?':
		case '[':
		case '\\':
		case ']':
		case '`':
		case '~':	goto yy60;
		case '\t':
		case ' ':	goto yy31;
		case '\n':	goto yy33;
		case '\r':	goto yy35;
		case '!':	goto yy26;
		case '"':	goto yy54;
		case '%':	goto yy14;
		case '&':	goto yy22;
		case '\'':	goto yy52;
		case '*':	goto yy10;
		case '+':	goto yy6;
		case '-':	goto yy8;
		case '.':	goto yy4;
		case '/':	goto yy12;
		case '0':	goto yy49;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':	goto yy51;
		case ':':	goto yy18;
		case '<':	goto yy27;
		case '=':	goto yy16;
		case '>':	goto yy29;
		case '@':	goto yy2;
		case '^':	goto yy24;
		case 'b':	goto yy38;
		case 'c':	goto yy36;
		case 'd':	goto yy42;
		case 'f':	goto yy41;
		case 'i':	goto yy39;
		case 'n':	goto yy45;
		case 'r':	goto yy47;
		case 's':	goto yy43;
		case 't':	goto yy44;
		case 'u':	goto yy40;
		case 'v':	goto yy46;
		case '{':	goto yy56;
		case '|':	goto yy20;
		case '}':	goto yy58;
		default:	goto yy48;
		}
yy2:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_AT; }
yy4:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy243;
		if (yych <= '/') goto yy5;
		if (yych <= '9') goto yy241;
yy5:
		yyleng = YYCURSOR - yytext;
		{ return T_DOT; }
yy6:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy239;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS; }
yy8:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy237;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS; }
yy10:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '*') goto yy231;
		if (yych == '=') goto yy233;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL; }
yy12:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '.') {
			if (yych == '*') goto yy225;
		} else {
			if (yych <= '/') goto yy227;
			if (yych == '=') goto yy229;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_DIV; }
yy14:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy223;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD; }
yy16:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy221;
		yyleng = YYCURSOR - yytext;
		{ return T_ASSIGN; }
yy18:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy219;
yy19:
		yyleng = YYCURSOR - yytext;
		{ return yoLexChar(parser, parserNode); }
yy20:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '|') goto yy217;
		yyleng = YYCURSOR - yytext;
		{ return T_OR; }
yy22:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '&') goto yy215;
		yyleng = YYCURSOR - yytext;
		{ return T_AND; }
yy24:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '^') goto yy213;
		yyleng = YYCURSOR - yytext;
		{ return T_XOR; }
yy26:
		yych = *++YYCURSOR;
		if (yych == '=') goto yy211;
		goto yy19;
yy27:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy209;
		yyleng = YYCURSOR - yytext;
		{ return T_LT; }
yy29:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy207;
		yyleng = YYCURSOR - yytext;
		{ return T_GT; }
yy31:
		++YYCURSOR;
		yych = *YYCURSOR;
		goto yy206;
yy32:
		yyleng = YYCURSOR - yytext;
		{ goto restart; }
yy33:
		++YYCURSOR;
yy34:
		yyleng = YYCURSOR - yytext;
		{ return T_NEWLINE; }
yy35:
		yych = *++YYCURSOR;
		if (yych == '\n') goto yy204;
		goto yy34;
yy36:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= 'k') {
			if (yych == 'h') goto yy190;
			goto yy80;
		} else {
			if (yych <= 'l') goto yy191;
			if (yych == 'o') goto yy192;
			goto yy80;
		}
yy37:
		yyleng = YYCURSOR - yytext;
		{ return yoLexName(parser, parserNode); }
yy38:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy182;
		if (yych == 'y') goto yy183;
		goto yy80;
yy39:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy161;
		goto yy80;
yy40:
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy142;
		goto yy80;
yy41:
		yych = *++YYCURSOR;
		if (yych <= 'k') {
			if (yych == 'a') goto yy122;
			goto yy80;
		} else {
			if (yych <= 'l') goto yy123;
			if (yych == 'u') goto yy124;
			goto yy80;
		}
yy42:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy116;
		goto yy80;
yy43:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy106;
		goto yy80;
yy44:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy98;
		if (yych == 'y') goto yy99;
		goto yy80;
yy45:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy94;
		goto yy80;
yy46:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy87;
		if (yych == 'o') goto yy88;
		goto yy80;
yy47:
		yych = *++YYCURSOR;
		if (yych == 'e') goto yy81;
		goto yy80;
yy48:
		yych = *++YYCURSOR;
		goto yy80;
yy49:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= 'E') {
			if (yych <= '/') {
				if (yych == '.') goto yy61;
			} else {
				if (yych <= '9') goto yy64;
				if (yych >= 'E') goto yy66;
			}
		} else {
			if (yych <= 'd') {
				if (yych == 'b') goto yy72;
			} else {
				if (yych <= 'e') goto yy66;
				if (yych == 'x') goto yy71;
			}
		}
yy50:
		yyleng = YYCURSOR - yytext;
		{ return yoLexDec(parser, parserNode); }
yy51:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= '9') {
			if (yych == '.') goto yy61;
			if (yych <= '/') goto yy50;
			goto yy64;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy50;
				goto yy66;
			} else {
				if (yych == 'e') goto yy66;
				goto yy50;
			}
		}
yy52:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexSingleQuotedString(parser, parserNode); }
yy54:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexQuotedString(parser, parserNode); }
yy56:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexInjectOpenBrace(parser, parserNode); }
yy58:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexInjectCloseBrace(parser, parserNode); }
yy60:
		yych = *++YYCURSOR;
		goto yy19;
yy61:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 8) {
			goto yy61;
		}
		if (yych == 'E') goto yy66;
		if (yych == 'e') goto yy66;
yy63:
		yyleng = YYCURSOR - yytext;
		{ return yoLexFloat(parser, parserNode); }
yy64:
		yyaccept = 0;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= '9') {
			if (yych == '.') goto yy61;
			if (yych <= '/') goto yy50;
			goto yy64;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy50;
			} else {
				if (yych != 'e') goto yy50;
			}
		}
yy66:
		yych = *++YYCURSOR;
		if (yych <= ',') {
			if (yych == '+') goto yy68;
		} else {
			if (yych <= '-') goto yy68;
			if (yych <= '/') goto yy67;
			if (yych <= '9') goto yy69;
		}
yy67:
		YYCURSOR = YYMARKER;
		if (yyaccept <= 0) {
			goto yy50;
		} else {
			goto yy63;
		}
yy68:
		yych = *++YYCURSOR;
		if (yych <= '/') goto yy67;
		if (yych >= ':') goto yy67;
yy69:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yych <= '/') goto yy63;
		if (yych <= '9') goto yy69;
		goto yy63;
yy71:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy76;
		}
		goto yy67;
yy72:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy73;
		}
		goto yy67;
yy73:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy73;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexBin(parser, parserNode); }
yy76:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy76;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexHex(parser, parserNode); }
yy79:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy80:
		if (yybm[0+yych] & 64) {
			goto yy79;
		}
		goto yy37;
yy81:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_RETURN; }
yy87:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy92;
		goto yy80;
yy88:
		yych = *++YYCURSOR;
		if (yych != 'i') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'd') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VOID; }
yy92:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VAR; }
yy94:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_NULL; }
yy98:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy103;
		goto yy80;
yy99:
		yych = *++YYCURSOR;
		if (yych != 'p') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TYPE; }
yy103:
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TRUE; }
yy106:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy80;
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy108;
		if (yych == 'u') goto yy109;
		goto yy80;
yy108:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy113;
		goto yy80;
yy109:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRUCT; }
yy113:
		yych = *++YYCURSOR;
		if (yych != 'g') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRING; }
yy116:
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'b') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy122:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy138;
		goto yy80;
yy123:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy128;
		goto yy80;
yy124:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FUNC; }
yy128:
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy80;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '?') {
			if (yych <= '3') {
				if (yych <= '/') goto yy131;
				if (yych <= '2') goto yy79;
				goto yy132;
			} else {
				if (yych == '6') goto yy133;
				if (yych <= '9') goto yy79;
			}
		} else {
			if (yych <= '_') {
				if (yych <= 'Z') goto yy79;
				if (yych >= '_') goto yy79;
			} else {
				if (yych <= '`') goto yy131;
				if (yych <= 'z') goto yy79;
				if (yych >= 0x7F) goto yy79;
			}
		}
yy131:
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy132:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy136;
		goto yy80;
yy133:
		yych = *++YYCURSOR;
		if (yych != '4') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy136:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy138:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FALSE; }
yy142:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy80;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy79;
				} else {
					if (yych <= '1') goto yy148;
					if (yych <= '2') goto yy79;
					goto yy149;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy79;
					goto yy150;
				} else {
					if (yych == '8') goto yy146;
					goto yy79;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy79;
				} else {
					if (yych == '_') goto yy79;
				}
			} else {
				if (yych <= 'p') {
					if (yych <= 'o') goto yy79;
					goto yy151;
				} else {
					if (yych <= 'z') goto yy79;
					if (yych >= 0x7F) goto yy79;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_UINT64 : T_UINT32; }
yy146:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT8; }
yy148:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy159;
		goto yy80;
yy149:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy157;
		goto yy80;
yy150:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy155;
		goto yy80;
yy151:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINTPTR; }
yy155:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT64; }
yy157:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT32; }
yy159:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT16; }
yy161:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy80;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy79;
				} else {
					if (yych <= '1') goto yy164;
					if (yych <= '2') goto yy79;
					goto yy165;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy79;
					goto yy166;
				} else {
					if (yych == '8') goto yy167;
					goto yy79;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy79;
				} else {
					if (yych == '_') goto yy79;
				}
			} else {
				if (yych <= 'e') {
					if (yych <= 'd') goto yy79;
					goto yy169;
				} else {
					if (yych <= 'z') goto yy79;
					if (yych >= 0x7F) goto yy79;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_INT64 : T_INT32; }
yy164:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy180;
		goto yy80;
yy165:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy178;
		goto yy80;
yy166:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy176;
		goto yy80;
yy167:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy169:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INTERFACE; }
yy176:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT64; }
yy178:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT32; }
yy180:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT16; }
yy182:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy187;
		goto yy80;
yy183:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy187:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_BOOL; }
yy190:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy201;
		goto yy80;
yy191:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy197;
		goto yy80;
yy192:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CONST; }
yy197:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy80;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CLASS; }
yy201:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy80;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy204:
		yych = *++YYCURSOR;
		goto yy34;
yy205:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy206:
		if (yybm[0+yych] & 128) {
			goto yy205;
		}
		goto yy32;
yy207:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_GE; }
yy209:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_LE; }
yy211:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_NE; }
yy213:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_XORXOR; }
yy215:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ANDAND; }
yy217:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_OROR; }
yy219:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DECL_ASSIGN; }
yy221:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_EQ; }
yy223:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD_ASSIGN; }
yy225:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexMultiLineComment(parser); goto restart; }
yy227:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexLineComment(parser); goto restart; }
yy229:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DIV_ASSIGN; }
yy231:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy235;
		yyleng = YYCURSOR - yytext;
		{ return T_POW; }
yy233:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL_ASSIGN; }
yy235:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_POW_ASSIGN; }
yy237:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS_ASSIGN; }
yy239:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS_ASSIGN; }
yy241:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= 'D') {
			if (yych <= '/') goto yy63;
			if (yych <= '9') goto yy241;
			goto yy63;
		} else {
			if (yych <= 'E') goto yy66;
			if (yych == 'e') goto yy66;
			goto yy63;
		}
yy243:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy247;
		if (yych == '=') goto yy245;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT; }
yy245:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT_ASSIGN; }
yy247:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ELLIPSIS; }
	}
/* *********************************** */
yyc_ST_IN_YOLANG:
	{
		static const unsigned char yybm[] = {
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0, 128,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			128,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			120, 120, 104, 104, 104, 104, 104, 104, 
			104, 104,   0,   0,   0,   0,   0,   0, 
			 64,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			  0,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
		};
		YYFILL(10);
		yych = *YYCURSOR;
		switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x1F:
		case '#':
		case '$':
		case '(':
		case ')':
		case ',':
		case ';':
		case '?':
		case '[':
		case '\\':
		case ']':
		case '`':
		case '{':
		case '}':
		case '~':	goto yy305;
		case '\t':
		case ' ':	goto yy280;
		case '\n':	goto yy282;
		case '\r':	goto yy284;
		case '!':	goto yy275;
		case '"':	goto yy303;
		case '%':	goto yy263;
		case '&':	goto yy271;
		case '\'':	goto yy301;
		case '*':	goto yy259;
		case '+':	goto yy255;
		case '-':	goto yy257;
		case '.':	goto yy253;
		case '/':	goto yy261;
		case '0':	goto yy298;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':	goto yy300;
		case ':':	goto yy267;
		case '<':	goto yy276;
		case '=':	goto yy265;
		case '>':	goto yy278;
		case '@':	goto yy251;
		case '^':	goto yy273;
		case 'b':	goto yy287;
		case 'c':	goto yy285;
		case 'd':	goto yy291;
		case 'f':	goto yy290;
		case 'i':	goto yy288;
		case 'n':	goto yy294;
		case 'r':	goto yy296;
		case 's':	goto yy292;
		case 't':	goto yy293;
		case 'u':	goto yy289;
		case 'v':	goto yy295;
		case '|':	goto yy269;
		default:	goto yy297;
		}
yy251:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_AT; }
yy253:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy488;
		if (yych <= '/') goto yy254;
		if (yych <= '9') goto yy486;
yy254:
		yyleng = YYCURSOR - yytext;
		{ return T_DOT; }
yy255:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy484;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS; }
yy257:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy482;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS; }
yy259:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '*') goto yy476;
		if (yych == '=') goto yy478;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL; }
yy261:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '.') {
			if (yych == '*') goto yy470;
		} else {
			if (yych <= '/') goto yy472;
			if (yych == '=') goto yy474;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_DIV; }
yy263:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy468;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD; }
yy265:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy466;
		yyleng = YYCURSOR - yytext;
		{ return T_ASSIGN; }
yy267:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy464;
yy268:
		yyleng = YYCURSOR - yytext;
		{ return yoLexChar(parser, parserNode); }
yy269:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '|') goto yy462;
		yyleng = YYCURSOR - yytext;
		{ return T_OR; }
yy271:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '&') goto yy460;
		yyleng = YYCURSOR - yytext;
		{ return T_AND; }
yy273:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '^') goto yy458;
		yyleng = YYCURSOR - yytext;
		{ return T_XOR; }
yy275:
		yych = *++YYCURSOR;
		if (yych == '=') goto yy456;
		goto yy268;
yy276:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy454;
		yyleng = YYCURSOR - yytext;
		{ return T_LT; }
yy278:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy452;
		yyleng = YYCURSOR - yytext;
		{ return T_GT; }
yy280:
		++YYCURSOR;
		yych = *YYCURSOR;
		goto yy451;
yy281:
		yyleng = YYCURSOR - yytext;
		{ goto restart; }
yy282:
		++YYCURSOR;
yy283:
		yyleng = YYCURSOR - yytext;
		{ return T_NEWLINE; }
yy284:
		yych = *++YYCURSOR;
		if (yych == '\n') goto yy449;
		goto yy283;
yy285:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= 'k') {
			if (yych == 'h') goto yy435;
			goto yy325;
		} else {
			if (yych <= 'l') goto yy436;
			if (yych == 'o') goto yy437;
			goto yy325;
		}
yy286:
		yyleng = YYCURSOR - yytext;
		{ return yoLexName(parser, parserNode); }
yy287:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy427;
		if (yych == 'y') goto yy428;
		goto yy325;
yy288:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy406;
		goto yy325;
yy289:
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy387;
		goto yy325;
yy290:
		yych = *++YYCURSOR;
		if (yych <= 'k') {
			if (yych == 'a') goto yy367;
			goto yy325;
		} else {
			if (yych <= 'l') goto yy368;
			if (yych == 'u') goto yy369;
			goto yy325;
		}
yy291:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy361;
		goto yy325;
yy292:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy351;
		goto yy325;
yy293:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy343;
		if (yych == 'y') goto yy344;
		goto yy325;
yy294:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy339;
		goto yy325;
yy295:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy332;
		if (yych == 'o') goto yy333;
		goto yy325;
yy296:
		yych = *++YYCURSOR;
		if (yych == 'e') goto yy326;
		goto yy325;
yy297:
		yych = *++YYCURSOR;
		goto yy325;
yy298:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= 'E') {
			if (yych <= '/') {
				if (yych == '.') goto yy306;
			} else {
				if (yych <= '9') goto yy309;
				if (yych >= 'E') goto yy311;
			}
		} else {
			if (yych <= 'd') {
				if (yych == 'b') goto yy317;
			} else {
				if (yych <= 'e') goto yy311;
				if (yych == 'x') goto yy316;
			}
		}
yy299:
		yyleng = YYCURSOR - yytext;
		{ return yoLexDec(parser, parserNode); }
yy300:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= '9') {
			if (yych == '.') goto yy306;
			if (yych <= '/') goto yy299;
			goto yy309;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy299;
				goto yy311;
			} else {
				if (yych == 'e') goto yy311;
				goto yy299;
			}
		}
yy301:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexSingleQuotedString(parser, parserNode); }
yy303:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexQuotedString(parser, parserNode); }
yy305:
		yych = *++YYCURSOR;
		goto yy268;
yy306:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 8) {
			goto yy306;
		}
		if (yych == 'E') goto yy311;
		if (yych == 'e') goto yy311;
yy308:
		yyleng = YYCURSOR - yytext;
		{ return yoLexFloat(parser, parserNode); }
yy309:
		yyaccept = 0;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= '9') {
			if (yych == '.') goto yy306;
			if (yych <= '/') goto yy299;
			goto yy309;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy299;
			} else {
				if (yych != 'e') goto yy299;
			}
		}
yy311:
		yych = *++YYCURSOR;
		if (yych <= ',') {
			if (yych == '+') goto yy313;
		} else {
			if (yych <= '-') goto yy313;
			if (yych <= '/') goto yy312;
			if (yych <= '9') goto yy314;
		}
yy312:
		YYCURSOR = YYMARKER;
		if (yyaccept <= 0) {
			goto yy299;
		} else {
			goto yy308;
		}
yy313:
		yych = *++YYCURSOR;
		if (yych <= '/') goto yy312;
		if (yych >= ':') goto yy312;
yy314:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yych <= '/') goto yy308;
		if (yych <= '9') goto yy314;
		goto yy308;
yy316:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy321;
		}
		goto yy312;
yy317:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy318;
		}
		goto yy312;
yy318:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy318;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexBin(parser, parserNode); }
yy321:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy321;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexHex(parser, parserNode); }
yy324:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy325:
		if (yybm[0+yych] & 64) {
			goto yy324;
		}
		goto yy286;
yy326:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_RETURN; }
yy332:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy337;
		goto yy325;
yy333:
		yych = *++YYCURSOR;
		if (yych != 'i') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'd') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VOID; }
yy337:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VAR; }
yy339:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_NULL; }
yy343:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy348;
		goto yy325;
yy344:
		yych = *++YYCURSOR;
		if (yych != 'p') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TYPE; }
yy348:
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TRUE; }
yy351:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy325;
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy353;
		if (yych == 'u') goto yy354;
		goto yy325;
yy353:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy358;
		goto yy325;
yy354:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRUCT; }
yy358:
		yych = *++YYCURSOR;
		if (yych != 'g') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRING; }
yy361:
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'b') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy367:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy383;
		goto yy325;
yy368:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy373;
		goto yy325;
yy369:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FUNC; }
yy373:
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy325;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '?') {
			if (yych <= '3') {
				if (yych <= '/') goto yy376;
				if (yych <= '2') goto yy324;
				goto yy377;
			} else {
				if (yych == '6') goto yy378;
				if (yych <= '9') goto yy324;
			}
		} else {
			if (yych <= '_') {
				if (yych <= 'Z') goto yy324;
				if (yych >= '_') goto yy324;
			} else {
				if (yych <= '`') goto yy376;
				if (yych <= 'z') goto yy324;
				if (yych >= 0x7F) goto yy324;
			}
		}
yy376:
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy377:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy381;
		goto yy325;
yy378:
		yych = *++YYCURSOR;
		if (yych != '4') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy381:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy383:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FALSE; }
yy387:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy325;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy324;
				} else {
					if (yych <= '1') goto yy393;
					if (yych <= '2') goto yy324;
					goto yy394;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy324;
					goto yy395;
				} else {
					if (yych == '8') goto yy391;
					goto yy324;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy324;
				} else {
					if (yych == '_') goto yy324;
				}
			} else {
				if (yych <= 'p') {
					if (yych <= 'o') goto yy324;
					goto yy396;
				} else {
					if (yych <= 'z') goto yy324;
					if (yych >= 0x7F) goto yy324;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_UINT64 : T_UINT32; }
yy391:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT8; }
yy393:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy404;
		goto yy325;
yy394:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy402;
		goto yy325;
yy395:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy400;
		goto yy325;
yy396:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINTPTR; }
yy400:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT64; }
yy402:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT32; }
yy404:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT16; }
yy406:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy325;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy324;
				} else {
					if (yych <= '1') goto yy409;
					if (yych <= '2') goto yy324;
					goto yy410;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy324;
					goto yy411;
				} else {
					if (yych == '8') goto yy412;
					goto yy324;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy324;
				} else {
					if (yych == '_') goto yy324;
				}
			} else {
				if (yych <= 'e') {
					if (yych <= 'd') goto yy324;
					goto yy414;
				} else {
					if (yych <= 'z') goto yy324;
					if (yych >= 0x7F) goto yy324;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_INT64 : T_INT32; }
yy409:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy425;
		goto yy325;
yy410:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy423;
		goto yy325;
yy411:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy421;
		goto yy325;
yy412:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy414:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INTERFACE; }
yy421:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT64; }
yy423:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT32; }
yy425:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT16; }
yy427:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy432;
		goto yy325;
yy428:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy432:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_BOOL; }
yy435:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy446;
		goto yy325;
yy436:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy442;
		goto yy325;
yy437:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CONST; }
yy442:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy325;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CLASS; }
yy446:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy325;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy324;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy449:
		yych = *++YYCURSOR;
		goto yy283;
yy450:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy451:
		if (yybm[0+yych] & 128) {
			goto yy450;
		}
		goto yy281;
yy452:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_GE; }
yy454:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_LE; }
yy456:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_NE; }
yy458:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_XORXOR; }
yy460:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ANDAND; }
yy462:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_OROR; }
yy464:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DECL_ASSIGN; }
yy466:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_EQ; }
yy468:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD_ASSIGN; }
yy470:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexMultiLineComment(parser); goto restart; }
yy472:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexLineComment(parser); goto restart; }
yy474:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DIV_ASSIGN; }
yy476:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy480;
		yyleng = YYCURSOR - yytext;
		{ return T_POW; }
yy478:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL_ASSIGN; }
yy480:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_POW_ASSIGN; }
yy482:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS_ASSIGN; }
yy484:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS_ASSIGN; }
yy486:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= 'D') {
			if (yych <= '/') goto yy308;
			if (yych <= '9') goto yy486;
			goto yy308;
		} else {
			if (yych <= 'E') goto yy311;
			if (yych == 'e') goto yy311;
			goto yy308;
		}
yy488:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy492;
		if (yych == '=') goto yy490;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT; }
yy490:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT_ASSIGN; }
yy492:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ELLIPSIS; }
	}
}


/*
comment:
re2c:yyfill:check = 0;
<ST_IN_YOLANG,ST_INJECT>"*?	{ goto restart; } 
<ST_IN_YOLANG,ST_INJECT>{NEWLINE} { yoLexNewLine(parser); goto comment; }
<ST_IN_YOLANG,ST_INJECT>{ANY_CHAR} { goto comment; }
*/
}
