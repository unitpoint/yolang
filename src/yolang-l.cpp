/* Generated by re2c 0.13.5 on Mon Aug 03 17:07:33 2015 */
#include "yoparser.h"

// #define YYPARSE_PARAM parm
// #define YYLEX_PARAM parm

// #define YY_DECL int yolex(YYSTYPE *lvalp)

#ifdef YYDEBUG
#undef YYDEBUG
#endif

#if 1
# define YYDEBUG(s, c) printf("state: %d char: %c\n", s, c)
#else
# define YYDEBUG(s, c)
#endif

// #include "yolang-y.h"

#define YYCTYPE   unsigned char
#define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + YO_LEX_MAXFILL)) { return 0; } }
#define YYCURSOR  parser->cursor
#define YYLIMIT   parser->limit
#define YYMARKER  parser->marker

#if 0
#define YYGETSTATE()  parser->state
#define YYSETSTATE(s) parser->state = s
#define yych		 parser->ch
#define yyaccept	 parser->accept
#endif

#define YYGETCONDITION()  parser->state
#define YYSETCONDITION(c) parser->state = c

#define STATE(name)  YO_##name

/* emulate flex constructs */
#define BEGIN(state) YYSETSTATE(STATE(state))
#define YYSTATE      YYGETSTATE()
#define yytext       parser->text
#define yyleng       parser->textLen
#define yyless(x)    do { YYCURSOR = (YYCTYPE*)yytext + x; yyleng = (int)x; } while(0)
#define yymore()     goto yymore_restart

/* perform sanity check. If this message is triggered you should
   increase the YO_LEX_MAXFILL value in the zend_streams.h file */
#define YYMAXFILL 10
#if YO_LEX_MAXFILL < YYMAXFILL
# error YO_LEX_MAXFILL should be greater than or equal to YYMAXFILL
#endif 

int yoLexDec(void*, YYSTYPE*);
int yoLexBin(void*, YYSTYPE*);
int yoLexHex(void*, YYSTYPE*);
int yoLexFloat(void*, YYSTYPE*);
int yoLexName(void*, YYSTYPE*);
int yoLexChar(void*, YYSTYPE*);
void yoLexLineComment(void*);
void yoLexMultiLineComment(void*);
void yoLexNewLine(void*);
int yoLexSingleQuotedString(void * parm, YYSTYPE * elem);
int yoLexQuotedString(void * parm, YYSTYPE * elem);
int yoLexInjectOpenBrace(void * parm, YYSTYPE*);
int yoLexInjectCloseBrace(void * parm, YYSTYPE*);
int yoLexOpenBrace(void * parm);
int yoLexOpenBracket(void * parm);
int yoLexCloseBracket(void * parm);

int yolex(YYSTYPE * parserNode, void * parm)
{
	YoParserParams * parser = (YoParserParams*)parm;
	// YYMARKER = YYCURSOR;
	
restart:
	yytext = YYCURSOR;

// yymore_restart:

	// -f option
	// YYCTYPE yych;
	// unsigned int yyaccept = 0;
	

{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	if (YYGETCONDITION() < 1) {
		goto yyc_ST_INJECT;
	} else {
		goto yyc_ST_YOLANG;
	}
/* *********************************** */
yyc_ST_INJECT:
	{
		static const unsigned char yybm[] = {
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0, 128,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			128,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			120, 120, 104, 104, 104, 104, 104, 104, 
			104, 104,   0,   0,   0,   0,   0,   0, 
			 64,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			  0,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
		};

		YYFILL(10);
		yych = *YYCURSOR;
		switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x1F:
		case '#':
		case '$':
		case ',':
		case ';':
		case '?':
		case '[':
		case '\\':
		case ']':
		case '`':
		case '~':	goto yy65;
		case '\t':
		case ' ':	goto yy31;
		case '\n':	goto yy33;
		case '\r':	goto yy35;
		case '!':	goto yy26;
		case '"':	goto yy63;
		case '%':	goto yy14;
		case '&':	goto yy22;
		case '\'':	goto yy61;
		case '(':	goto yy53;
		case ')':	goto yy55;
		case '*':	goto yy10;
		case '+':	goto yy6;
		case '-':	goto yy8;
		case '.':	goto yy4;
		case '/':	goto yy12;
		case '0':	goto yy58;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':	goto yy60;
		case ':':	goto yy18;
		case '<':	goto yy27;
		case '=':	goto yy16;
		case '>':	goto yy29;
		case '@':	goto yy2;
		case '^':	goto yy24;
		case 'b':	goto yy38;
		case 'c':	goto yy36;
		case 'd':	goto yy42;
		case 'e':	goto yy48;
		case 'f':	goto yy41;
		case 'i':	goto yy39;
		case 'n':	goto yy45;
		case 'r':	goto yy47;
		case 's':	goto yy43;
		case 't':	goto yy44;
		case 'u':	goto yy40;
		case 'v':	goto yy46;
		case '{':	goto yy49;
		case '|':	goto yy20;
		case '}':	goto yy51;
		default:	goto yy57;
		}
yy2:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_AT; }
yy4:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy257;
		if (yych <= '/') goto yy5;
		if (yych <= '9') goto yy255;
yy5:
		yyleng = YYCURSOR - yytext;
		{ return T_DOT; }
yy6:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy253;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS; }
yy8:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy251;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS; }
yy10:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '*') goto yy245;
		if (yych == '=') goto yy247;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL; }
yy12:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '.') {
			if (yych == '*') goto yy239;
		} else {
			if (yych <= '/') goto yy241;
			if (yych == '=') goto yy243;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_DIV; }
yy14:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy237;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD; }
yy16:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy235;
		yyleng = YYCURSOR - yytext;
		{ return T_ASSIGN; }
yy18:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy233;
yy19:
		yyleng = YYCURSOR - yytext;
		{ return yoLexChar(parser, parserNode); }
yy20:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '|') goto yy231;
		yyleng = YYCURSOR - yytext;
		{ return T_OR; }
yy22:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '&') goto yy229;
		yyleng = YYCURSOR - yytext;
		{ return T_AND; }
yy24:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '^') goto yy227;
		yyleng = YYCURSOR - yytext;
		{ return T_XOR; }
yy26:
		yych = *++YYCURSOR;
		if (yych == '=') goto yy225;
		goto yy19;
yy27:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy223;
		yyleng = YYCURSOR - yytext;
		{ return T_LT; }
yy29:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy221;
		yyleng = YYCURSOR - yytext;
		{ return T_GT; }
yy31:
		++YYCURSOR;
		yych = *YYCURSOR;
		goto yy220;
yy32:
		yyleng = YYCURSOR - yytext;
		{ goto restart; }
yy33:
		++YYCURSOR;
yy34:
		yyleng = YYCURSOR - yytext;
		{ return T_NEWLINE; }
yy35:
		yych = *++YYCURSOR;
		if (yych == '\n') goto yy218;
		goto yy34;
yy36:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= 'k') {
			if (yych == 'h') goto yy204;
			goto yy85;
		} else {
			if (yych <= 'l') goto yy205;
			if (yych == 'o') goto yy206;
			goto yy85;
		}
yy37:
		yyleng = YYCURSOR - yytext;
		{ return yoLexName(parser, parserNode); }
yy38:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy196;
		if (yych == 'y') goto yy197;
		goto yy85;
yy39:
		yych = *++YYCURSOR;
		if (yych == 'f') goto yy173;
		if (yych == 'n') goto yy175;
		goto yy85;
yy40:
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy154;
		goto yy85;
yy41:
		yych = *++YYCURSOR;
		if (yych <= 'k') {
			if (yych == 'a') goto yy134;
			goto yy85;
		} else {
			if (yych <= 'l') goto yy135;
			if (yych == 'u') goto yy136;
			goto yy85;
		}
yy42:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy128;
		goto yy85;
yy43:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy118;
		goto yy85;
yy44:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy110;
		if (yych == 'y') goto yy111;
		goto yy85;
yy45:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy106;
		goto yy85;
yy46:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy99;
		if (yych == 'o') goto yy100;
		goto yy85;
yy47:
		yych = *++YYCURSOR;
		if (yych == 'e') goto yy93;
		goto yy85;
yy48:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy86;
		goto yy85;
yy49:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexInjectOpenBrace(parser, parserNode); }
yy51:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexInjectCloseBrace(parser, parserNode); }
yy53:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexOpenBracket(parser); }
yy55:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexCloseBracket(parser); }
yy57:
		yych = *++YYCURSOR;
		goto yy85;
yy58:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= 'E') {
			if (yych <= '/') {
				if (yych == '.') goto yy66;
			} else {
				if (yych <= '9') goto yy69;
				if (yych >= 'E') goto yy71;
			}
		} else {
			if (yych <= 'd') {
				if (yych == 'b') goto yy77;
			} else {
				if (yych <= 'e') goto yy71;
				if (yych == 'x') goto yy76;
			}
		}
yy59:
		yyleng = YYCURSOR - yytext;
		{ return yoLexDec(parser, parserNode); }
yy60:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= '9') {
			if (yych == '.') goto yy66;
			if (yych <= '/') goto yy59;
			goto yy69;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy59;
				goto yy71;
			} else {
				if (yych == 'e') goto yy71;
				goto yy59;
			}
		}
yy61:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexSingleQuotedString(parser, parserNode); }
yy63:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexQuotedString(parser, parserNode); }
yy65:
		yych = *++YYCURSOR;
		goto yy19;
yy66:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 8) {
			goto yy66;
		}
		if (yych == 'E') goto yy71;
		if (yych == 'e') goto yy71;
yy68:
		yyleng = YYCURSOR - yytext;
		{ return yoLexFloat(parser, parserNode); }
yy69:
		yyaccept = 0;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= '9') {
			if (yych == '.') goto yy66;
			if (yych <= '/') goto yy59;
			goto yy69;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy59;
			} else {
				if (yych != 'e') goto yy59;
			}
		}
yy71:
		yych = *++YYCURSOR;
		if (yych <= ',') {
			if (yych == '+') goto yy73;
		} else {
			if (yych <= '-') goto yy73;
			if (yych <= '/') goto yy72;
			if (yych <= '9') goto yy74;
		}
yy72:
		YYCURSOR = YYMARKER;
		if (yyaccept <= 0) {
			goto yy59;
		} else {
			goto yy68;
		}
yy73:
		yych = *++YYCURSOR;
		if (yych <= '/') goto yy72;
		if (yych >= ':') goto yy72;
yy74:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yych <= '/') goto yy68;
		if (yych <= '9') goto yy74;
		goto yy68;
yy76:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy81;
		}
		goto yy72;
yy77:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy78;
		}
		goto yy72;
yy78:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexBin(parser, parserNode); }
yy81:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy81;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexHex(parser, parserNode); }
yy84:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy85:
		if (yybm[0+yych] & 64) {
			goto yy84;
		}
		goto yy37;
yy86:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy85;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '_') {
			if (yych <= '?') {
				if (yych <= '/') goto yy89;
				if (yych <= '9') goto yy84;
			} else {
				if (yych <= 'Z') goto yy84;
				if (yych >= '_') goto yy84;
			}
		} else {
			if (yych <= 'i') {
				if (yych <= '`') goto yy89;
				if (yych <= 'h') goto yy84;
				goto yy90;
			} else {
				if (yych <= 'z') goto yy84;
				if (yych >= 0x7F) goto yy84;
			}
		}
yy89:
		yyleng = YYCURSOR - yytext;
		{ return T_ELSE; }
yy90:
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_ELSEIF; }
yy93:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_RETURN; }
yy99:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy104;
		goto yy85;
yy100:
		yych = *++YYCURSOR;
		if (yych != 'i') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'd') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VOID; }
yy104:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VAR; }
yy106:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_NULL; }
yy110:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy115;
		goto yy85;
yy111:
		yych = *++YYCURSOR;
		if (yych != 'p') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TYPE; }
yy115:
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TRUE; }
yy118:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy85;
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy120;
		if (yych == 'u') goto yy121;
		goto yy85;
yy120:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy125;
		goto yy85;
yy121:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRUCT; }
yy125:
		yych = *++YYCURSOR;
		if (yych != 'g') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRING; }
yy128:
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'b') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy134:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy150;
		goto yy85;
yy135:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy140;
		goto yy85;
yy136:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FUNC; }
yy140:
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy85;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '?') {
			if (yych <= '3') {
				if (yych <= '/') goto yy143;
				if (yych <= '2') goto yy84;
				goto yy144;
			} else {
				if (yych == '6') goto yy145;
				if (yych <= '9') goto yy84;
			}
		} else {
			if (yych <= '_') {
				if (yych <= 'Z') goto yy84;
				if (yych >= '_') goto yy84;
			} else {
				if (yych <= '`') goto yy143;
				if (yych <= 'z') goto yy84;
				if (yych >= 0x7F) goto yy84;
			}
		}
yy143:
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy144:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy148;
		goto yy85;
yy145:
		yych = *++YYCURSOR;
		if (yych != '4') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy148:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy150:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FALSE; }
yy154:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy85;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy84;
				} else {
					if (yych <= '1') goto yy160;
					if (yych <= '2') goto yy84;
					goto yy161;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy84;
					goto yy162;
				} else {
					if (yych == '8') goto yy158;
					goto yy84;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy84;
				} else {
					if (yych == '_') goto yy84;
				}
			} else {
				if (yych <= 'p') {
					if (yych <= 'o') goto yy84;
					goto yy163;
				} else {
					if (yych <= 'z') goto yy84;
					if (yych >= 0x7F) goto yy84;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_UINT64 : T_UINT32; }
yy158:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT8; }
yy160:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy171;
		goto yy85;
yy161:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy169;
		goto yy85;
yy162:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy167;
		goto yy85;
yy163:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINTPTR; }
yy167:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT64; }
yy169:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT32; }
yy171:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT16; }
yy173:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_IF; }
yy175:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy85;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy84;
				} else {
					if (yych <= '1') goto yy178;
					if (yych <= '2') goto yy84;
					goto yy179;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy84;
					goto yy180;
				} else {
					if (yych == '8') goto yy181;
					goto yy84;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy84;
				} else {
					if (yych == '_') goto yy84;
				}
			} else {
				if (yych <= 'e') {
					if (yych <= 'd') goto yy84;
					goto yy183;
				} else {
					if (yych <= 'z') goto yy84;
					if (yych >= 0x7F) goto yy84;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_INT64 : T_INT32; }
yy178:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy194;
		goto yy85;
yy179:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy192;
		goto yy85;
yy180:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy190;
		goto yy85;
yy181:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy183:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INTERFACE; }
yy190:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT64; }
yy192:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT32; }
yy194:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT16; }
yy196:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy201;
		goto yy85;
yy197:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy201:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_BOOL; }
yy204:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy215;
		goto yy85;
yy205:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy211;
		goto yy85;
yy206:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CONST; }
yy211:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy85;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CLASS; }
yy215:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy85;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy84;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy218:
		yych = *++YYCURSOR;
		goto yy34;
yy219:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy220:
		if (yybm[0+yych] & 128) {
			goto yy219;
		}
		goto yy32;
yy221:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_GE; }
yy223:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_LE; }
yy225:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_NE; }
yy227:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_XORXOR; }
yy229:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ANDAND; }
yy231:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_OROR; }
yy233:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DECL_ASSIGN; }
yy235:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_EQ; }
yy237:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD_ASSIGN; }
yy239:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexMultiLineComment(parser); goto restart; }
yy241:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexLineComment(parser); goto restart; }
yy243:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DIV_ASSIGN; }
yy245:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy249;
		yyleng = YYCURSOR - yytext;
		{ return T_POW; }
yy247:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL_ASSIGN; }
yy249:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_POW_ASSIGN; }
yy251:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS_ASSIGN; }
yy253:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS_ASSIGN; }
yy255:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= 'D') {
			if (yych <= '/') goto yy68;
			if (yych <= '9') goto yy255;
			goto yy68;
		} else {
			if (yych <= 'E') goto yy71;
			if (yych == 'e') goto yy71;
			goto yy68;
		}
yy257:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy261;
		if (yych == '=') goto yy259;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT; }
yy259:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT_ASSIGN; }
yy261:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ELLIPSIS; }
	}
/* *********************************** */
yyc_ST_YOLANG:
	{
		static const unsigned char yybm[] = {
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0, 128,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			128,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			120, 120, 104, 104, 104, 104, 104, 104, 
			104, 104,   0,   0,   0,   0,   0,   0, 
			 64,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			  0,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
		};
		YYFILL(10);
		yych = *YYCURSOR;
		switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x1F:
		case '#':
		case '$':
		case ',':
		case ';':
		case '?':
		case '[':
		case '\\':
		case ']':
		case '`':
		case '~':	goto yy326;
		case '\t':
		case ' ':	goto yy294;
		case '\n':	goto yy296;
		case '\r':	goto yy298;
		case '!':	goto yy289;
		case '"':	goto yy324;
		case '%':	goto yy277;
		case '&':	goto yy285;
		case '\'':	goto yy322;
		case '(':	goto yy314;
		case ')':
		case '}':	goto yy316;
		case '*':	goto yy273;
		case '+':	goto yy269;
		case '-':	goto yy271;
		case '.':	goto yy267;
		case '/':	goto yy275;
		case '0':	goto yy319;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':	goto yy321;
		case ':':	goto yy281;
		case '<':	goto yy290;
		case '=':	goto yy279;
		case '>':	goto yy292;
		case '@':	goto yy265;
		case '^':	goto yy287;
		case 'b':	goto yy301;
		case 'c':	goto yy299;
		case 'd':	goto yy305;
		case 'e':	goto yy311;
		case 'f':	goto yy304;
		case 'i':	goto yy302;
		case 'n':	goto yy308;
		case 'r':	goto yy310;
		case 's':	goto yy306;
		case 't':	goto yy307;
		case 'u':	goto yy303;
		case 'v':	goto yy309;
		case '{':	goto yy312;
		case '|':	goto yy283;
		default:	goto yy318;
		}
yy265:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_AT; }
yy267:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy518;
		if (yych <= '/') goto yy268;
		if (yych <= '9') goto yy516;
yy268:
		yyleng = YYCURSOR - yytext;
		{ return T_DOT; }
yy269:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy514;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS; }
yy271:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy512;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS; }
yy273:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '*') goto yy506;
		if (yych == '=') goto yy508;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL; }
yy275:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '.') {
			if (yych == '*') goto yy500;
		} else {
			if (yych <= '/') goto yy502;
			if (yych == '=') goto yy504;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_DIV; }
yy277:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy498;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD; }
yy279:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy496;
		yyleng = YYCURSOR - yytext;
		{ return T_ASSIGN; }
yy281:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy494;
yy282:
		yyleng = YYCURSOR - yytext;
		{ return yoLexChar(parser, parserNode); }
yy283:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '|') goto yy492;
		yyleng = YYCURSOR - yytext;
		{ return T_OR; }
yy285:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '&') goto yy490;
		yyleng = YYCURSOR - yytext;
		{ return T_AND; }
yy287:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '^') goto yy488;
		yyleng = YYCURSOR - yytext;
		{ return T_XOR; }
yy289:
		yych = *++YYCURSOR;
		if (yych == '=') goto yy486;
		goto yy282;
yy290:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy484;
		yyleng = YYCURSOR - yytext;
		{ return T_LT; }
yy292:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy482;
		yyleng = YYCURSOR - yytext;
		{ return T_GT; }
yy294:
		++YYCURSOR;
		yych = *YYCURSOR;
		goto yy481;
yy295:
		yyleng = YYCURSOR - yytext;
		{ goto restart; }
yy296:
		++YYCURSOR;
yy297:
		yyleng = YYCURSOR - yytext;
		{ return T_NEWLINE; }
yy298:
		yych = *++YYCURSOR;
		if (yych == '\n') goto yy479;
		goto yy297;
yy299:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= 'k') {
			if (yych == 'h') goto yy465;
			goto yy346;
		} else {
			if (yych <= 'l') goto yy466;
			if (yych == 'o') goto yy467;
			goto yy346;
		}
yy300:
		yyleng = YYCURSOR - yytext;
		{ return yoLexName(parser, parserNode); }
yy301:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy457;
		if (yych == 'y') goto yy458;
		goto yy346;
yy302:
		yych = *++YYCURSOR;
		if (yych == 'f') goto yy434;
		if (yych == 'n') goto yy436;
		goto yy346;
yy303:
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy415;
		goto yy346;
yy304:
		yych = *++YYCURSOR;
		if (yych <= 'k') {
			if (yych == 'a') goto yy395;
			goto yy346;
		} else {
			if (yych <= 'l') goto yy396;
			if (yych == 'u') goto yy397;
			goto yy346;
		}
yy305:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy389;
		goto yy346;
yy306:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy379;
		goto yy346;
yy307:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy371;
		if (yych == 'y') goto yy372;
		goto yy346;
yy308:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy367;
		goto yy346;
yy309:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy360;
		if (yych == 'o') goto yy361;
		goto yy346;
yy310:
		yych = *++YYCURSOR;
		if (yych == 'e') goto yy354;
		goto yy346;
yy311:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy347;
		goto yy346;
yy312:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexOpenBrace(parser); }
yy314:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexOpenBracket(parser); }
yy316:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexCloseBracket(parser); }
yy318:
		yych = *++YYCURSOR;
		goto yy346;
yy319:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= 'E') {
			if (yych <= '/') {
				if (yych == '.') goto yy327;
			} else {
				if (yych <= '9') goto yy330;
				if (yych >= 'E') goto yy332;
			}
		} else {
			if (yych <= 'd') {
				if (yych == 'b') goto yy338;
			} else {
				if (yych <= 'e') goto yy332;
				if (yych == 'x') goto yy337;
			}
		}
yy320:
		yyleng = YYCURSOR - yytext;
		{ return yoLexDec(parser, parserNode); }
yy321:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= '9') {
			if (yych == '.') goto yy327;
			if (yych <= '/') goto yy320;
			goto yy330;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy320;
				goto yy332;
			} else {
				if (yych == 'e') goto yy332;
				goto yy320;
			}
		}
yy322:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexSingleQuotedString(parser, parserNode); }
yy324:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexQuotedString(parser, parserNode); }
yy326:
		yych = *++YYCURSOR;
		goto yy282;
yy327:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 8) {
			goto yy327;
		}
		if (yych == 'E') goto yy332;
		if (yych == 'e') goto yy332;
yy329:
		yyleng = YYCURSOR - yytext;
		{ return yoLexFloat(parser, parserNode); }
yy330:
		yyaccept = 0;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= '9') {
			if (yych == '.') goto yy327;
			if (yych <= '/') goto yy320;
			goto yy330;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy320;
			} else {
				if (yych != 'e') goto yy320;
			}
		}
yy332:
		yych = *++YYCURSOR;
		if (yych <= ',') {
			if (yych == '+') goto yy334;
		} else {
			if (yych <= '-') goto yy334;
			if (yych <= '/') goto yy333;
			if (yych <= '9') goto yy335;
		}
yy333:
		YYCURSOR = YYMARKER;
		if (yyaccept <= 0) {
			goto yy320;
		} else {
			goto yy329;
		}
yy334:
		yych = *++YYCURSOR;
		if (yych <= '/') goto yy333;
		if (yych >= ':') goto yy333;
yy335:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yych <= '/') goto yy329;
		if (yych <= '9') goto yy335;
		goto yy329;
yy337:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy342;
		}
		goto yy333;
yy338:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy339;
		}
		goto yy333;
yy339:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy339;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexBin(parser, parserNode); }
yy342:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy342;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexHex(parser, parserNode); }
yy345:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy346:
		if (yybm[0+yych] & 64) {
			goto yy345;
		}
		goto yy300;
yy347:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy346;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '_') {
			if (yych <= '?') {
				if (yych <= '/') goto yy350;
				if (yych <= '9') goto yy345;
			} else {
				if (yych <= 'Z') goto yy345;
				if (yych >= '_') goto yy345;
			}
		} else {
			if (yych <= 'i') {
				if (yych <= '`') goto yy350;
				if (yych <= 'h') goto yy345;
				goto yy351;
			} else {
				if (yych <= 'z') goto yy345;
				if (yych >= 0x7F) goto yy345;
			}
		}
yy350:
		yyleng = YYCURSOR - yytext;
		{ return T_ELSE; }
yy351:
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_ELSEIF; }
yy354:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_RETURN; }
yy360:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy365;
		goto yy346;
yy361:
		yych = *++YYCURSOR;
		if (yych != 'i') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'd') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VOID; }
yy365:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VAR; }
yy367:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_NULL; }
yy371:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy376;
		goto yy346;
yy372:
		yych = *++YYCURSOR;
		if (yych != 'p') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TYPE; }
yy376:
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TRUE; }
yy379:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy346;
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy381;
		if (yych == 'u') goto yy382;
		goto yy346;
yy381:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy386;
		goto yy346;
yy382:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRUCT; }
yy386:
		yych = *++YYCURSOR;
		if (yych != 'g') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRING; }
yy389:
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'b') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy395:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy411;
		goto yy346;
yy396:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy401;
		goto yy346;
yy397:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FUNC; }
yy401:
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy346;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '?') {
			if (yych <= '3') {
				if (yych <= '/') goto yy404;
				if (yych <= '2') goto yy345;
				goto yy405;
			} else {
				if (yych == '6') goto yy406;
				if (yych <= '9') goto yy345;
			}
		} else {
			if (yych <= '_') {
				if (yych <= 'Z') goto yy345;
				if (yych >= '_') goto yy345;
			} else {
				if (yych <= '`') goto yy404;
				if (yych <= 'z') goto yy345;
				if (yych >= 0x7F) goto yy345;
			}
		}
yy404:
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy405:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy409;
		goto yy346;
yy406:
		yych = *++YYCURSOR;
		if (yych != '4') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy409:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy411:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FALSE; }
yy415:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy346;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy345;
				} else {
					if (yych <= '1') goto yy421;
					if (yych <= '2') goto yy345;
					goto yy422;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy345;
					goto yy423;
				} else {
					if (yych == '8') goto yy419;
					goto yy345;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy345;
				} else {
					if (yych == '_') goto yy345;
				}
			} else {
				if (yych <= 'p') {
					if (yych <= 'o') goto yy345;
					goto yy424;
				} else {
					if (yych <= 'z') goto yy345;
					if (yych >= 0x7F) goto yy345;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_UINT64 : T_UINT32; }
yy419:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT8; }
yy421:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy432;
		goto yy346;
yy422:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy430;
		goto yy346;
yy423:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy428;
		goto yy346;
yy424:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINTPTR; }
yy428:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT64; }
yy430:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT32; }
yy432:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT16; }
yy434:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_IF; }
yy436:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy346;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy345;
				} else {
					if (yych <= '1') goto yy439;
					if (yych <= '2') goto yy345;
					goto yy440;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy345;
					goto yy441;
				} else {
					if (yych == '8') goto yy442;
					goto yy345;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy345;
				} else {
					if (yych == '_') goto yy345;
				}
			} else {
				if (yych <= 'e') {
					if (yych <= 'd') goto yy345;
					goto yy444;
				} else {
					if (yych <= 'z') goto yy345;
					if (yych >= 0x7F) goto yy345;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_INT64 : T_INT32; }
yy439:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy455;
		goto yy346;
yy440:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy453;
		goto yy346;
yy441:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy451;
		goto yy346;
yy442:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy444:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INTERFACE; }
yy451:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT64; }
yy453:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT32; }
yy455:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT16; }
yy457:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy462;
		goto yy346;
yy458:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy462:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_BOOL; }
yy465:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy476;
		goto yy346;
yy466:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy472;
		goto yy346;
yy467:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CONST; }
yy472:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy346;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CLASS; }
yy476:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy346;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy345;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy479:
		yych = *++YYCURSOR;
		goto yy297;
yy480:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy481:
		if (yybm[0+yych] & 128) {
			goto yy480;
		}
		goto yy295;
yy482:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_GE; }
yy484:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_LE; }
yy486:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_NE; }
yy488:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_XORXOR; }
yy490:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ANDAND; }
yy492:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_OROR; }
yy494:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DECL_ASSIGN; }
yy496:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_EQ; }
yy498:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD_ASSIGN; }
yy500:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexMultiLineComment(parser); goto restart; }
yy502:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexLineComment(parser); goto restart; }
yy504:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DIV_ASSIGN; }
yy506:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy510;
		yyleng = YYCURSOR - yytext;
		{ return T_POW; }
yy508:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL_ASSIGN; }
yy510:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_POW_ASSIGN; }
yy512:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS_ASSIGN; }
yy514:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS_ASSIGN; }
yy516:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= 'D') {
			if (yych <= '/') goto yy329;
			if (yych <= '9') goto yy516;
			goto yy329;
		} else {
			if (yych <= 'E') goto yy332;
			if (yych == 'e') goto yy332;
			goto yy329;
		}
yy518:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy522;
		if (yych == '=') goto yy520;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT; }
yy520:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT_ASSIGN; }
yy522:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ELLIPSIS; }
	}
}


/*
comment:
re2c:yyfill:check = 0;
<ST_YOLANG,ST_INJECT>"*?	{ goto restart; } 
<ST_YOLANG,ST_INJECT>{NEWLINE} { yoLexNewLine(parser); goto comment; }
<ST_YOLANG,ST_INJECT>{ANY_CHAR} { goto comment; }
*/
}
