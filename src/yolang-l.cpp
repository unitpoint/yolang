/* Generated by re2c 0.13.5 on Sun Aug 02 03:50:03 2015 */
#include "yoparser.h"

// #define YYPARSE_PARAM parm
// #define YYLEX_PARAM parm

// #define YY_DECL int yolex(YYSTYPE *lvalp)

#ifdef YYDEBUG
#undef YYDEBUG
#endif

#if 1
# define YYDEBUG(s, c) printf("state: %d char: %c\n", s, c)
#else
# define YYDEBUG(s, c)
#endif

// #include "yolang-y.h"

#define YYCTYPE   unsigned char
#define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + YO_LEX_LEN_AHEAD)) { return 0; } }
#define YYCURSOR  parser->cursor
#define YYLIMIT   parser->limit
#define YYMARKER  parser->marker

#if 0
#define YYGETSTATE()  parser->state
#define YYSETSTATE(s) parser->state = s
#define yych		 parser->ch
#define yyaccept	 parser->accept
#endif

#define YYGETCONDITION()  parser->condition
#define YYSETCONDITION(c) parser->condition = c

#define STATE(name)  YO_##name

/* emulate flex constructs */
#define BEGIN(state) YYSETSTATE(STATE(state))
#define YYSTATE      YYGETSTATE()
#define yytext       parser->text
#define yyleng       parser->textLen
#define yyless(x)    do { YYCURSOR = (YYCTYPE*)yytext + x; yyleng = (int)x; } while(0)
#define yymore()     goto yymore_restart

/* perform sanity check. If this message is triggered you should
   increase the YO_LEX_LEN_AHEAD value in the zend_streams.h file */
#define YYMAXFILL 10
#if YO_LEX_LEN_AHEAD < YYMAXFILL
# error YO_LEX_LEN_AHEAD should be greater than or equal to YYMAXFILL
#endif 

int yoLexDec(void*, YYSTYPE*);
int yoLexBin(void*, YYSTYPE*);
int yoLexHex(void*, YYSTYPE*);
int yoLexFloat(void*, YYSTYPE*);
int yoLexName(void*, YYSTYPE*);
int yoLexChar(void*, YYSTYPE*);
void yoLexNewLine(void*);

int yolex(YYSTYPE * parserNode, void * parm)
{
	YoParserParams * parser = (YoParserParams*)parm;
	// YYMARKER = YYCURSOR;
	
restart:
	yytext = YYCURSOR;

// yymore_restart:

	// -f option
	// YYCTYPE yych;
	// unsigned int yyaccept = 0;
	

{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	goto yyc_ST_IN_YOLANG;
/* *********************************** */
yyc_ST_IN_YOLANG:
	{
		static const unsigned char yybm[] = {
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0, 128,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			128,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			120, 120, 104, 104, 104, 104, 104, 104, 
			104, 104,   0,   0,   0,   0,   0,   0, 
			 64,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			  0,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
		};

		YYFILL(10);
		yych = *YYCURSOR;
		switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x1F:
		case '"':
		case '#':
		case '$':
		case '\'':
		case '(':
		case ')':
		case ',':
		case ';':
		case '?':
		case '[':
		case '\\':
		case ']':
		case '`':
		case '{':
		case '}':
		case '~':	goto yy51;
		case '\t':
		case ' ':	goto yy31;
		case '\n':	goto yy33;
		case '\r':	goto yy35;
		case '!':	goto yy26;
		case '%':	goto yy14;
		case '&':	goto yy22;
		case '*':	goto yy10;
		case '+':	goto yy6;
		case '-':	goto yy8;
		case '.':	goto yy4;
		case '/':	goto yy12;
		case '0':	goto yy48;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':	goto yy50;
		case ':':	goto yy18;
		case '<':	goto yy27;
		case '=':	goto yy16;
		case '>':	goto yy29;
		case '@':	goto yy2;
		case '^':	goto yy24;
		case 'b':	goto yy38;
		case 'c':	goto yy36;
		case 'd':	goto yy42;
		case 'f':	goto yy41;
		case 'i':	goto yy39;
		case 'n':	goto yy45;
		case 's':	goto yy43;
		case 't':	goto yy44;
		case 'u':	goto yy40;
		case 'v':	goto yy46;
		case '|':	goto yy20;
		default:	goto yy47;
		}
yy2:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_AT; }
yy4:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy224;
		if (yych <= '/') goto yy5;
		if (yych <= '9') goto yy222;
yy5:
		yyleng = YYCURSOR - yytext;
		{ return T_DOT; }
yy6:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy220;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS; }
yy8:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy218;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS; }
yy10:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '*') goto yy212;
		if (yych == '=') goto yy214;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL; }
yy12:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy210;
		yyleng = YYCURSOR - yytext;
		{ return T_DIV; }
yy14:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy208;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD; }
yy16:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy206;
		yyleng = YYCURSOR - yytext;
		{ return T_ASSIGN; }
yy18:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy204;
yy19:
		yyleng = YYCURSOR - yytext;
		{ return yoLexChar(parser, parserNode); }
yy20:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '|') goto yy202;
		yyleng = YYCURSOR - yytext;
		{ return T_OR; }
yy22:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '&') goto yy200;
		yyleng = YYCURSOR - yytext;
		{ return T_AND; }
yy24:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '^') goto yy198;
		yyleng = YYCURSOR - yytext;
		{ return T_XOR; }
yy26:
		yych = *++YYCURSOR;
		if (yych == '=') goto yy196;
		goto yy19;
yy27:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy194;
		yyleng = YYCURSOR - yytext;
		{ return T_LT; }
yy29:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy192;
		yyleng = YYCURSOR - yytext;
		{ return T_GT; }
yy31:
		++YYCURSOR;
		yych = *YYCURSOR;
		goto yy191;
yy32:
		yyleng = YYCURSOR - yytext;
		{ goto restart; }
yy33:
		++YYCURSOR;
yy34:
		yyleng = YYCURSOR - yytext;
		{ return T_NEWLINE; }
yy35:
		yych = *++YYCURSOR;
		if (yych == '\n') goto yy189;
		goto yy34;
yy36:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= 'k') {
			if (yych == 'h') goto yy175;
			goto yy71;
		} else {
			if (yych <= 'l') goto yy176;
			if (yych == 'o') goto yy177;
			goto yy71;
		}
yy37:
		yyleng = YYCURSOR - yytext;
		{ return yoLexName(parser, parserNode); }
yy38:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy167;
		if (yych == 'y') goto yy168;
		goto yy71;
yy39:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy146;
		goto yy71;
yy40:
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy127;
		goto yy71;
yy41:
		yych = *++YYCURSOR;
		if (yych <= 'k') {
			if (yych == 'a') goto yy107;
			goto yy71;
		} else {
			if (yych <= 'l') goto yy108;
			if (yych == 'u') goto yy109;
			goto yy71;
		}
yy42:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy101;
		goto yy71;
yy43:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy91;
		goto yy71;
yy44:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy83;
		if (yych == 'y') goto yy84;
		goto yy71;
yy45:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy79;
		goto yy71;
yy46:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy72;
		if (yych == 'o') goto yy73;
		goto yy71;
yy47:
		yych = *++YYCURSOR;
		goto yy71;
yy48:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= 'E') {
			if (yych <= '/') {
				if (yych == '.') goto yy52;
			} else {
				if (yych <= '9') goto yy55;
				if (yych >= 'E') goto yy57;
			}
		} else {
			if (yych <= 'd') {
				if (yych == 'b') goto yy63;
			} else {
				if (yych <= 'e') goto yy57;
				if (yych == 'x') goto yy62;
			}
		}
yy49:
		yyleng = YYCURSOR - yytext;
		{ return yoLexDec(parser, parserNode); }
yy50:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= '9') {
			if (yych == '.') goto yy52;
			if (yych <= '/') goto yy49;
			goto yy55;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy49;
				goto yy57;
			} else {
				if (yych == 'e') goto yy57;
				goto yy49;
			}
		}
yy51:
		yych = *++YYCURSOR;
		goto yy19;
yy52:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 8) {
			goto yy52;
		}
		if (yych == 'E') goto yy57;
		if (yych == 'e') goto yy57;
yy54:
		yyleng = YYCURSOR - yytext;
		{ return yoLexFloat(parser, parserNode); }
yy55:
		yyaccept = 0;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= '9') {
			if (yych == '.') goto yy52;
			if (yych <= '/') goto yy49;
			goto yy55;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy49;
			} else {
				if (yych != 'e') goto yy49;
			}
		}
yy57:
		yych = *++YYCURSOR;
		if (yych <= ',') {
			if (yych == '+') goto yy59;
		} else {
			if (yych <= '-') goto yy59;
			if (yych <= '/') goto yy58;
			if (yych <= '9') goto yy60;
		}
yy58:
		YYCURSOR = YYMARKER;
		if (yyaccept <= 0) {
			goto yy49;
		} else {
			goto yy54;
		}
yy59:
		yych = *++YYCURSOR;
		if (yych <= '/') goto yy58;
		if (yych >= ':') goto yy58;
yy60:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yych <= '/') goto yy54;
		if (yych <= '9') goto yy60;
		goto yy54;
yy62:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy67;
		}
		goto yy58;
yy63:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy64;
		}
		goto yy58;
yy64:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy64;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexBin(parser, parserNode); }
yy67:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy67;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexHex(parser, parserNode); }
yy70:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy71:
		if (yybm[0+yych] & 64) {
			goto yy70;
		}
		goto yy37;
yy72:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy77;
		goto yy71;
yy73:
		yych = *++YYCURSOR;
		if (yych != 'i') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'd') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VOID; }
yy77:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VAR; }
yy79:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_NULL; }
yy83:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy88;
		goto yy71;
yy84:
		yych = *++YYCURSOR;
		if (yych != 'p') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TYPE; }
yy88:
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TRUE; }
yy91:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy71;
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy93;
		if (yych == 'u') goto yy94;
		goto yy71;
yy93:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy98;
		goto yy71;
yy94:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRUCT; }
yy98:
		yych = *++YYCURSOR;
		if (yych != 'g') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRING; }
yy101:
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'b') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy107:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy123;
		goto yy71;
yy108:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy113;
		goto yy71;
yy109:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FUNC; }
yy113:
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy71;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '?') {
			if (yych <= '3') {
				if (yych <= '/') goto yy116;
				if (yych <= '2') goto yy70;
				goto yy117;
			} else {
				if (yych == '6') goto yy118;
				if (yych <= '9') goto yy70;
			}
		} else {
			if (yych <= '_') {
				if (yych <= 'Z') goto yy70;
				if (yych >= '_') goto yy70;
			} else {
				if (yych <= '`') goto yy116;
				if (yych <= 'z') goto yy70;
				if (yych >= 0x7F) goto yy70;
			}
		}
yy116:
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy117:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy121;
		goto yy71;
yy118:
		yych = *++YYCURSOR;
		if (yych != '4') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy121:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy123:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FALSE; }
yy127:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy71;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy70;
				} else {
					if (yych <= '1') goto yy133;
					if (yych <= '2') goto yy70;
					goto yy134;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy70;
					goto yy135;
				} else {
					if (yych == '8') goto yy131;
					goto yy70;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy70;
				} else {
					if (yych == '_') goto yy70;
				}
			} else {
				if (yych <= 'p') {
					if (yych <= 'o') goto yy70;
					goto yy136;
				} else {
					if (yych <= 'z') goto yy70;
					if (yych >= 0x7F) goto yy70;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_UINT64 : T_UINT32; }
yy131:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT8; }
yy133:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy144;
		goto yy71;
yy134:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy142;
		goto yy71;
yy135:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy140;
		goto yy71;
yy136:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINTPTR; }
yy140:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT64; }
yy142:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT32; }
yy144:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT16; }
yy146:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy71;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy70;
				} else {
					if (yych <= '1') goto yy149;
					if (yych <= '2') goto yy70;
					goto yy150;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy70;
					goto yy151;
				} else {
					if (yych == '8') goto yy152;
					goto yy70;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy70;
				} else {
					if (yych == '_') goto yy70;
				}
			} else {
				if (yych <= 'e') {
					if (yych <= 'd') goto yy70;
					goto yy154;
				} else {
					if (yych <= 'z') goto yy70;
					if (yych >= 0x7F) goto yy70;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_INT64 : T_INT32; }
yy149:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy165;
		goto yy71;
yy150:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy163;
		goto yy71;
yy151:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy161;
		goto yy71;
yy152:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy154:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INTERFACE; }
yy161:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT64; }
yy163:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT32; }
yy165:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT16; }
yy167:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy172;
		goto yy71;
yy168:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy172:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_BOOL; }
yy175:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy186;
		goto yy71;
yy176:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy182;
		goto yy71;
yy177:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CONST; }
yy182:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy71;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CLASS; }
yy186:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy71;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy70;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy189:
		yych = *++YYCURSOR;
		goto yy34;
yy190:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy191:
		if (yybm[0+yych] & 128) {
			goto yy190;
		}
		goto yy32;
yy192:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_GE; }
yy194:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_LE; }
yy196:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_NE; }
yy198:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_XORXOR; }
yy200:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ANDAND; }
yy202:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_OROR; }
yy204:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DECL_ASSIGN; }
yy206:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_EQ; }
yy208:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD_ASSIGN; }
yy210:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DIV_ASSIGN; }
yy212:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy216;
		yyleng = YYCURSOR - yytext;
		{ return T_POW; }
yy214:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL_ASSIGN; }
yy216:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_POW_ASSIGN; }
yy218:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS_ASSIGN; }
yy220:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS_ASSIGN; }
yy222:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= 'D') {
			if (yych <= '/') goto yy54;
			if (yych <= '9') goto yy222;
			goto yy54;
		} else {
			if (yych <= 'E') goto yy57;
			if (yych == 'e') goto yy57;
			goto yy54;
		}
yy224:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy228;
		if (yych == '=') goto yy226;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT; }
yy226:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT_ASSIGN; }
yy228:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ELLIPSIS; }
	}
}


/*
comment:
re2c:yyfill:check = 0;
<ST_IN_YOLANG>"*?	{ goto restart; } 
<ST_IN_YOLANG>{NEWLINE} { yoLexNewLine(parser); goto comment; }
<ST_IN_YOLANG>{ANY_CHAR} { goto comment; }
*/
}
