/* Generated by re2c 0.13.5 on Mon Aug 03 00:18:45 2015 */
#include "yoparser.h"

// #define YYPARSE_PARAM parm
// #define YYLEX_PARAM parm

// #define YY_DECL int yolex(YYSTYPE *lvalp)

#ifdef YYDEBUG
#undef YYDEBUG
#endif

#if 1
# define YYDEBUG(s, c) printf("state: %d char: %c\n", s, c)
#else
# define YYDEBUG(s, c)
#endif

// #include "yolang-y.h"

#define YYCTYPE   unsigned char
#define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + YO_LEX_MAXFILL)) { return 0; } }
#define YYCURSOR  parser->cursor
#define YYLIMIT   parser->limit
#define YYMARKER  parser->marker

#if 0
#define YYGETSTATE()  parser->state
#define YYSETSTATE(s) parser->state = s
#define yych		 parser->ch
#define yyaccept	 parser->accept
#endif

#define YYGETCONDITION()  parser->state
#define YYSETCONDITION(c) parser->state = c

#define STATE(name)  YO_##name

/* emulate flex constructs */
#define BEGIN(state) YYSETSTATE(STATE(state))
#define YYSTATE      YYGETSTATE()
#define yytext       parser->text
#define yyleng       parser->textLen
#define yyless(x)    do { YYCURSOR = (YYCTYPE*)yytext + x; yyleng = (int)x; } while(0)
#define yymore()     goto yymore_restart

/* perform sanity check. If this message is triggered you should
   increase the YO_LEX_MAXFILL value in the zend_streams.h file */
#define YYMAXFILL 10
#if YO_LEX_MAXFILL < YYMAXFILL
# error YO_LEX_MAXFILL should be greater than or equal to YYMAXFILL
#endif 

int yoLexDec(void*, YYSTYPE*);
int yoLexBin(void*, YYSTYPE*);
int yoLexHex(void*, YYSTYPE*);
int yoLexFloat(void*, YYSTYPE*);
int yoLexName(void*, YYSTYPE*);
int yoLexChar(void*, YYSTYPE*);
void yoLexLineComment(void*);
void yoLexMultiLineComment(void*);
void yoLexNewLine(void*);
int yoLexSingleQuotedString(void * parm, YYSTYPE * elem);
int yoLexQuotedString(void * parm, YYSTYPE * elem);
int yoLexInjectOpenBrace(void * parm, YYSTYPE*);
int yoLexInjectCloseBrace(void * parm, YYSTYPE*);
// void yoLexPushState(void * parm, int state);
// void yoLexPopState(void * parm, int state);

int yolex(YYSTYPE * parserNode, void * parm)
{
	YoParserParams * parser = (YoParserParams*)parm;
	// YYMARKER = YYCURSOR;
	
restart:
	yytext = YYCURSOR;

// yymore_restart:

	// -f option
	// YYCTYPE yych;
	// unsigned int yyaccept = 0;
	

{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	if (YYGETCONDITION() < 1) {
		goto yyc_ST_INJECT;
	} else {
		goto yyc_ST_IN_YOLANG;
	}
/* *********************************** */
yyc_ST_INJECT:
	{
		static const unsigned char yybm[] = {
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0, 128,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			128,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			120, 120, 104, 104, 104, 104, 104, 104, 
			104, 104,   0,   0,   0,   0,   0,   0, 
			 64,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			  0,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
		};

		YYFILL(10);
		yych = *YYCURSOR;
		switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x1F:
		case '#':
		case '$':
		case '(':
		case ')':
		case ',':
		case ';':
		case '?':
		case '[':
		case '\\':
		case ']':
		case '`':
		case '~':	goto yy59;
		case '\t':
		case ' ':	goto yy31;
		case '\n':	goto yy33;
		case '\r':	goto yy35;
		case '!':	goto yy26;
		case '"':	goto yy53;
		case '%':	goto yy14;
		case '&':	goto yy22;
		case '\'':	goto yy51;
		case '*':	goto yy10;
		case '+':	goto yy6;
		case '-':	goto yy8;
		case '.':	goto yy4;
		case '/':	goto yy12;
		case '0':	goto yy48;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':	goto yy50;
		case ':':	goto yy18;
		case '<':	goto yy27;
		case '=':	goto yy16;
		case '>':	goto yy29;
		case '@':	goto yy2;
		case '^':	goto yy24;
		case 'b':	goto yy38;
		case 'c':	goto yy36;
		case 'd':	goto yy42;
		case 'f':	goto yy41;
		case 'i':	goto yy39;
		case 'n':	goto yy45;
		case 's':	goto yy43;
		case 't':	goto yy44;
		case 'u':	goto yy40;
		case 'v':	goto yy46;
		case '{':	goto yy55;
		case '|':	goto yy20;
		case '}':	goto yy57;
		default:	goto yy47;
		}
yy2:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_AT; }
yy4:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy236;
		if (yych <= '/') goto yy5;
		if (yych <= '9') goto yy234;
yy5:
		yyleng = YYCURSOR - yytext;
		{ return T_DOT; }
yy6:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy232;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS; }
yy8:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy230;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS; }
yy10:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '*') goto yy224;
		if (yych == '=') goto yy226;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL; }
yy12:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '.') {
			if (yych == '*') goto yy218;
		} else {
			if (yych <= '/') goto yy220;
			if (yych == '=') goto yy222;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_DIV; }
yy14:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy216;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD; }
yy16:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy214;
		yyleng = YYCURSOR - yytext;
		{ return T_ASSIGN; }
yy18:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy212;
yy19:
		yyleng = YYCURSOR - yytext;
		{ return yoLexChar(parser, parserNode); }
yy20:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '|') goto yy210;
		yyleng = YYCURSOR - yytext;
		{ return T_OR; }
yy22:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '&') goto yy208;
		yyleng = YYCURSOR - yytext;
		{ return T_AND; }
yy24:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '^') goto yy206;
		yyleng = YYCURSOR - yytext;
		{ return T_XOR; }
yy26:
		yych = *++YYCURSOR;
		if (yych == '=') goto yy204;
		goto yy19;
yy27:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy202;
		yyleng = YYCURSOR - yytext;
		{ return T_LT; }
yy29:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy200;
		yyleng = YYCURSOR - yytext;
		{ return T_GT; }
yy31:
		++YYCURSOR;
		yych = *YYCURSOR;
		goto yy199;
yy32:
		yyleng = YYCURSOR - yytext;
		{ goto restart; }
yy33:
		++YYCURSOR;
yy34:
		yyleng = YYCURSOR - yytext;
		{ return T_NEWLINE; }
yy35:
		yych = *++YYCURSOR;
		if (yych == '\n') goto yy197;
		goto yy34;
yy36:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= 'k') {
			if (yych == 'h') goto yy183;
			goto yy79;
		} else {
			if (yych <= 'l') goto yy184;
			if (yych == 'o') goto yy185;
			goto yy79;
		}
yy37:
		yyleng = YYCURSOR - yytext;
		{ return yoLexName(parser, parserNode); }
yy38:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy175;
		if (yych == 'y') goto yy176;
		goto yy79;
yy39:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy154;
		goto yy79;
yy40:
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy135;
		goto yy79;
yy41:
		yych = *++YYCURSOR;
		if (yych <= 'k') {
			if (yych == 'a') goto yy115;
			goto yy79;
		} else {
			if (yych <= 'l') goto yy116;
			if (yych == 'u') goto yy117;
			goto yy79;
		}
yy42:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy109;
		goto yy79;
yy43:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy99;
		goto yy79;
yy44:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy91;
		if (yych == 'y') goto yy92;
		goto yy79;
yy45:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy87;
		goto yy79;
yy46:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy80;
		if (yych == 'o') goto yy81;
		goto yy79;
yy47:
		yych = *++YYCURSOR;
		goto yy79;
yy48:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= 'E') {
			if (yych <= '/') {
				if (yych == '.') goto yy60;
			} else {
				if (yych <= '9') goto yy63;
				if (yych >= 'E') goto yy65;
			}
		} else {
			if (yych <= 'd') {
				if (yych == 'b') goto yy71;
			} else {
				if (yych <= 'e') goto yy65;
				if (yych == 'x') goto yy70;
			}
		}
yy49:
		yyleng = YYCURSOR - yytext;
		{ return yoLexDec(parser, parserNode); }
yy50:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= '9') {
			if (yych == '.') goto yy60;
			if (yych <= '/') goto yy49;
			goto yy63;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy49;
				goto yy65;
			} else {
				if (yych == 'e') goto yy65;
				goto yy49;
			}
		}
yy51:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexSingleQuotedString(parser, parserNode); }
yy53:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexQuotedString(parser, parserNode); }
yy55:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexInjectOpenBrace(parser, parserNode); }
yy57:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexInjectCloseBrace(parser, parserNode); }
yy59:
		yych = *++YYCURSOR;
		goto yy19;
yy60:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 8) {
			goto yy60;
		}
		if (yych == 'E') goto yy65;
		if (yych == 'e') goto yy65;
yy62:
		yyleng = YYCURSOR - yytext;
		{ return yoLexFloat(parser, parserNode); }
yy63:
		yyaccept = 0;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= '9') {
			if (yych == '.') goto yy60;
			if (yych <= '/') goto yy49;
			goto yy63;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy49;
			} else {
				if (yych != 'e') goto yy49;
			}
		}
yy65:
		yych = *++YYCURSOR;
		if (yych <= ',') {
			if (yych == '+') goto yy67;
		} else {
			if (yych <= '-') goto yy67;
			if (yych <= '/') goto yy66;
			if (yych <= '9') goto yy68;
		}
yy66:
		YYCURSOR = YYMARKER;
		if (yyaccept <= 0) {
			goto yy49;
		} else {
			goto yy62;
		}
yy67:
		yych = *++YYCURSOR;
		if (yych <= '/') goto yy66;
		if (yych >= ':') goto yy66;
yy68:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yych <= '/') goto yy62;
		if (yych <= '9') goto yy68;
		goto yy62;
yy70:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy75;
		}
		goto yy66;
yy71:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy72;
		}
		goto yy66;
yy72:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy72;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexBin(parser, parserNode); }
yy75:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy75;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexHex(parser, parserNode); }
yy78:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy79:
		if (yybm[0+yych] & 64) {
			goto yy78;
		}
		goto yy37;
yy80:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy85;
		goto yy79;
yy81:
		yych = *++YYCURSOR;
		if (yych != 'i') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'd') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VOID; }
yy85:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VAR; }
yy87:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_NULL; }
yy91:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy96;
		goto yy79;
yy92:
		yych = *++YYCURSOR;
		if (yych != 'p') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TYPE; }
yy96:
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TRUE; }
yy99:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy79;
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy101;
		if (yych == 'u') goto yy102;
		goto yy79;
yy101:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy106;
		goto yy79;
yy102:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRUCT; }
yy106:
		yych = *++YYCURSOR;
		if (yych != 'g') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRING; }
yy109:
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'b') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy115:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy131;
		goto yy79;
yy116:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy121;
		goto yy79;
yy117:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FUNC; }
yy121:
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy79;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '?') {
			if (yych <= '3') {
				if (yych <= '/') goto yy124;
				if (yych <= '2') goto yy78;
				goto yy125;
			} else {
				if (yych == '6') goto yy126;
				if (yych <= '9') goto yy78;
			}
		} else {
			if (yych <= '_') {
				if (yych <= 'Z') goto yy78;
				if (yych >= '_') goto yy78;
			} else {
				if (yych <= '`') goto yy124;
				if (yych <= 'z') goto yy78;
				if (yych >= 0x7F) goto yy78;
			}
		}
yy124:
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy125:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy129;
		goto yy79;
yy126:
		yych = *++YYCURSOR;
		if (yych != '4') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy129:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy131:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FALSE; }
yy135:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy79;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy78;
				} else {
					if (yych <= '1') goto yy141;
					if (yych <= '2') goto yy78;
					goto yy142;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy78;
					goto yy143;
				} else {
					if (yych == '8') goto yy139;
					goto yy78;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy78;
				} else {
					if (yych == '_') goto yy78;
				}
			} else {
				if (yych <= 'p') {
					if (yych <= 'o') goto yy78;
					goto yy144;
				} else {
					if (yych <= 'z') goto yy78;
					if (yych >= 0x7F) goto yy78;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_UINT64 : T_UINT32; }
yy139:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT8; }
yy141:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy152;
		goto yy79;
yy142:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy150;
		goto yy79;
yy143:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy148;
		goto yy79;
yy144:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINTPTR; }
yy148:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT64; }
yy150:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT32; }
yy152:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT16; }
yy154:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy79;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy78;
				} else {
					if (yych <= '1') goto yy157;
					if (yych <= '2') goto yy78;
					goto yy158;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy78;
					goto yy159;
				} else {
					if (yych == '8') goto yy160;
					goto yy78;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy78;
				} else {
					if (yych == '_') goto yy78;
				}
			} else {
				if (yych <= 'e') {
					if (yych <= 'd') goto yy78;
					goto yy162;
				} else {
					if (yych <= 'z') goto yy78;
					if (yych >= 0x7F) goto yy78;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_INT64 : T_INT32; }
yy157:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy173;
		goto yy79;
yy158:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy171;
		goto yy79;
yy159:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy169;
		goto yy79;
yy160:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy162:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INTERFACE; }
yy169:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT64; }
yy171:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT32; }
yy173:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT16; }
yy175:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy180;
		goto yy79;
yy176:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy180:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_BOOL; }
yy183:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy194;
		goto yy79;
yy184:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy190;
		goto yy79;
yy185:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CONST; }
yy190:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy79;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CLASS; }
yy194:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy79;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy78;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy197:
		yych = *++YYCURSOR;
		goto yy34;
yy198:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy199:
		if (yybm[0+yych] & 128) {
			goto yy198;
		}
		goto yy32;
yy200:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_GE; }
yy202:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_LE; }
yy204:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_NE; }
yy206:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_XORXOR; }
yy208:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ANDAND; }
yy210:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_OROR; }
yy212:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DECL_ASSIGN; }
yy214:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_EQ; }
yy216:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD_ASSIGN; }
yy218:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexMultiLineComment(parser); goto restart; }
yy220:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexLineComment(parser); goto restart; }
yy222:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DIV_ASSIGN; }
yy224:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy228;
		yyleng = YYCURSOR - yytext;
		{ return T_POW; }
yy226:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL_ASSIGN; }
yy228:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_POW_ASSIGN; }
yy230:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS_ASSIGN; }
yy232:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS_ASSIGN; }
yy234:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= 'D') {
			if (yych <= '/') goto yy62;
			if (yych <= '9') goto yy234;
			goto yy62;
		} else {
			if (yych <= 'E') goto yy65;
			if (yych == 'e') goto yy65;
			goto yy62;
		}
yy236:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy240;
		if (yych == '=') goto yy238;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT; }
yy238:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT_ASSIGN; }
yy240:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ELLIPSIS; }
	}
/* *********************************** */
yyc_ST_IN_YOLANG:
	{
		static const unsigned char yybm[] = {
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0, 128,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			128,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			120, 120, 104, 104, 104, 104, 104, 104, 
			104, 104,   0,   0,   0,   0,   0,   0, 
			 64,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			  0,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
		};
		YYFILL(10);
		yych = *YYCURSOR;
		switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x1F:
		case '#':
		case '$':
		case '(':
		case ')':
		case ',':
		case ';':
		case '?':
		case '[':
		case '\\':
		case ']':
		case '`':
		case '{':
		case '}':
		case '~':	goto yy297;
		case '\t':
		case ' ':	goto yy273;
		case '\n':	goto yy275;
		case '\r':	goto yy277;
		case '!':	goto yy268;
		case '"':	goto yy295;
		case '%':	goto yy256;
		case '&':	goto yy264;
		case '\'':	goto yy293;
		case '*':	goto yy252;
		case '+':	goto yy248;
		case '-':	goto yy250;
		case '.':	goto yy246;
		case '/':	goto yy254;
		case '0':	goto yy290;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':	goto yy292;
		case ':':	goto yy260;
		case '<':	goto yy269;
		case '=':	goto yy258;
		case '>':	goto yy271;
		case '@':	goto yy244;
		case '^':	goto yy266;
		case 'b':	goto yy280;
		case 'c':	goto yy278;
		case 'd':	goto yy284;
		case 'f':	goto yy283;
		case 'i':	goto yy281;
		case 'n':	goto yy287;
		case 's':	goto yy285;
		case 't':	goto yy286;
		case 'u':	goto yy282;
		case 'v':	goto yy288;
		case '|':	goto yy262;
		default:	goto yy289;
		}
yy244:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_AT; }
yy246:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy474;
		if (yych <= '/') goto yy247;
		if (yych <= '9') goto yy472;
yy247:
		yyleng = YYCURSOR - yytext;
		{ return T_DOT; }
yy248:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy470;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS; }
yy250:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy468;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS; }
yy252:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '*') goto yy462;
		if (yych == '=') goto yy464;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL; }
yy254:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '.') {
			if (yych == '*') goto yy456;
		} else {
			if (yych <= '/') goto yy458;
			if (yych == '=') goto yy460;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_DIV; }
yy256:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy454;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD; }
yy258:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy452;
		yyleng = YYCURSOR - yytext;
		{ return T_ASSIGN; }
yy260:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy450;
yy261:
		yyleng = YYCURSOR - yytext;
		{ return yoLexChar(parser, parserNode); }
yy262:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '|') goto yy448;
		yyleng = YYCURSOR - yytext;
		{ return T_OR; }
yy264:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '&') goto yy446;
		yyleng = YYCURSOR - yytext;
		{ return T_AND; }
yy266:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '^') goto yy444;
		yyleng = YYCURSOR - yytext;
		{ return T_XOR; }
yy268:
		yych = *++YYCURSOR;
		if (yych == '=') goto yy442;
		goto yy261;
yy269:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy440;
		yyleng = YYCURSOR - yytext;
		{ return T_LT; }
yy271:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy438;
		yyleng = YYCURSOR - yytext;
		{ return T_GT; }
yy273:
		++YYCURSOR;
		yych = *YYCURSOR;
		goto yy437;
yy274:
		yyleng = YYCURSOR - yytext;
		{ goto restart; }
yy275:
		++YYCURSOR;
yy276:
		yyleng = YYCURSOR - yytext;
		{ return T_NEWLINE; }
yy277:
		yych = *++YYCURSOR;
		if (yych == '\n') goto yy435;
		goto yy276;
yy278:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= 'k') {
			if (yych == 'h') goto yy421;
			goto yy317;
		} else {
			if (yych <= 'l') goto yy422;
			if (yych == 'o') goto yy423;
			goto yy317;
		}
yy279:
		yyleng = YYCURSOR - yytext;
		{ return yoLexName(parser, parserNode); }
yy280:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy413;
		if (yych == 'y') goto yy414;
		goto yy317;
yy281:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy392;
		goto yy317;
yy282:
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy373;
		goto yy317;
yy283:
		yych = *++YYCURSOR;
		if (yych <= 'k') {
			if (yych == 'a') goto yy353;
			goto yy317;
		} else {
			if (yych <= 'l') goto yy354;
			if (yych == 'u') goto yy355;
			goto yy317;
		}
yy284:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy347;
		goto yy317;
yy285:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy337;
		goto yy317;
yy286:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy329;
		if (yych == 'y') goto yy330;
		goto yy317;
yy287:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy325;
		goto yy317;
yy288:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy318;
		if (yych == 'o') goto yy319;
		goto yy317;
yy289:
		yych = *++YYCURSOR;
		goto yy317;
yy290:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= 'E') {
			if (yych <= '/') {
				if (yych == '.') goto yy298;
			} else {
				if (yych <= '9') goto yy301;
				if (yych >= 'E') goto yy303;
			}
		} else {
			if (yych <= 'd') {
				if (yych == 'b') goto yy309;
			} else {
				if (yych <= 'e') goto yy303;
				if (yych == 'x') goto yy308;
			}
		}
yy291:
		yyleng = YYCURSOR - yytext;
		{ return yoLexDec(parser, parserNode); }
yy292:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= '9') {
			if (yych == '.') goto yy298;
			if (yych <= '/') goto yy291;
			goto yy301;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy291;
				goto yy303;
			} else {
				if (yych == 'e') goto yy303;
				goto yy291;
			}
		}
yy293:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexSingleQuotedString(parser, parserNode); }
yy295:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexQuotedString(parser, parserNode); }
yy297:
		yych = *++YYCURSOR;
		goto yy261;
yy298:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 8) {
			goto yy298;
		}
		if (yych == 'E') goto yy303;
		if (yych == 'e') goto yy303;
yy300:
		yyleng = YYCURSOR - yytext;
		{ return yoLexFloat(parser, parserNode); }
yy301:
		yyaccept = 0;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= '9') {
			if (yych == '.') goto yy298;
			if (yych <= '/') goto yy291;
			goto yy301;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy291;
			} else {
				if (yych != 'e') goto yy291;
			}
		}
yy303:
		yych = *++YYCURSOR;
		if (yych <= ',') {
			if (yych == '+') goto yy305;
		} else {
			if (yych <= '-') goto yy305;
			if (yych <= '/') goto yy304;
			if (yych <= '9') goto yy306;
		}
yy304:
		YYCURSOR = YYMARKER;
		if (yyaccept <= 0) {
			goto yy291;
		} else {
			goto yy300;
		}
yy305:
		yych = *++YYCURSOR;
		if (yych <= '/') goto yy304;
		if (yych >= ':') goto yy304;
yy306:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yych <= '/') goto yy300;
		if (yych <= '9') goto yy306;
		goto yy300;
yy308:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy313;
		}
		goto yy304;
yy309:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy310;
		}
		goto yy304;
yy310:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy310;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexBin(parser, parserNode); }
yy313:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy313;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexHex(parser, parserNode); }
yy316:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy317:
		if (yybm[0+yych] & 64) {
			goto yy316;
		}
		goto yy279;
yy318:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy323;
		goto yy317;
yy319:
		yych = *++YYCURSOR;
		if (yych != 'i') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'd') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VOID; }
yy323:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VAR; }
yy325:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_NULL; }
yy329:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy334;
		goto yy317;
yy330:
		yych = *++YYCURSOR;
		if (yych != 'p') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TYPE; }
yy334:
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TRUE; }
yy337:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy317;
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy339;
		if (yych == 'u') goto yy340;
		goto yy317;
yy339:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy344;
		goto yy317;
yy340:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRUCT; }
yy344:
		yych = *++YYCURSOR;
		if (yych != 'g') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRING; }
yy347:
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'b') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy353:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy369;
		goto yy317;
yy354:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy359;
		goto yy317;
yy355:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FUNC; }
yy359:
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy317;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '?') {
			if (yych <= '3') {
				if (yych <= '/') goto yy362;
				if (yych <= '2') goto yy316;
				goto yy363;
			} else {
				if (yych == '6') goto yy364;
				if (yych <= '9') goto yy316;
			}
		} else {
			if (yych <= '_') {
				if (yych <= 'Z') goto yy316;
				if (yych >= '_') goto yy316;
			} else {
				if (yych <= '`') goto yy362;
				if (yych <= 'z') goto yy316;
				if (yych >= 0x7F) goto yy316;
			}
		}
yy362:
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy363:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy367;
		goto yy317;
yy364:
		yych = *++YYCURSOR;
		if (yych != '4') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy367:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy369:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FALSE; }
yy373:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy317;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy316;
				} else {
					if (yych <= '1') goto yy379;
					if (yych <= '2') goto yy316;
					goto yy380;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy316;
					goto yy381;
				} else {
					if (yych == '8') goto yy377;
					goto yy316;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy316;
				} else {
					if (yych == '_') goto yy316;
				}
			} else {
				if (yych <= 'p') {
					if (yych <= 'o') goto yy316;
					goto yy382;
				} else {
					if (yych <= 'z') goto yy316;
					if (yych >= 0x7F) goto yy316;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_UINT64 : T_UINT32; }
yy377:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT8; }
yy379:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy390;
		goto yy317;
yy380:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy388;
		goto yy317;
yy381:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy386;
		goto yy317;
yy382:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINTPTR; }
yy386:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT64; }
yy388:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT32; }
yy390:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT16; }
yy392:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy317;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy316;
				} else {
					if (yych <= '1') goto yy395;
					if (yych <= '2') goto yy316;
					goto yy396;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy316;
					goto yy397;
				} else {
					if (yych == '8') goto yy398;
					goto yy316;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy316;
				} else {
					if (yych == '_') goto yy316;
				}
			} else {
				if (yych <= 'e') {
					if (yych <= 'd') goto yy316;
					goto yy400;
				} else {
					if (yych <= 'z') goto yy316;
					if (yych >= 0x7F) goto yy316;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_INT64 : T_INT32; }
yy395:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy411;
		goto yy317;
yy396:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy409;
		goto yy317;
yy397:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy407;
		goto yy317;
yy398:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy400:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INTERFACE; }
yy407:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT64; }
yy409:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT32; }
yy411:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT16; }
yy413:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy418;
		goto yy317;
yy414:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy418:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_BOOL; }
yy421:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy432;
		goto yy317;
yy422:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy428;
		goto yy317;
yy423:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CONST; }
yy428:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy317;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CLASS; }
yy432:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy317;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy316;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy435:
		yych = *++YYCURSOR;
		goto yy276;
yy436:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy437:
		if (yybm[0+yych] & 128) {
			goto yy436;
		}
		goto yy274;
yy438:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_GE; }
yy440:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_LE; }
yy442:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_NE; }
yy444:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_XORXOR; }
yy446:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ANDAND; }
yy448:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_OROR; }
yy450:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DECL_ASSIGN; }
yy452:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_EQ; }
yy454:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD_ASSIGN; }
yy456:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexMultiLineComment(parser); goto restart; }
yy458:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexLineComment(parser); goto restart; }
yy460:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DIV_ASSIGN; }
yy462:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy466;
		yyleng = YYCURSOR - yytext;
		{ return T_POW; }
yy464:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL_ASSIGN; }
yy466:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_POW_ASSIGN; }
yy468:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS_ASSIGN; }
yy470:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS_ASSIGN; }
yy472:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= 'D') {
			if (yych <= '/') goto yy300;
			if (yych <= '9') goto yy472;
			goto yy300;
		} else {
			if (yych <= 'E') goto yy303;
			if (yych == 'e') goto yy303;
			goto yy300;
		}
yy474:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy478;
		if (yych == '=') goto yy476;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT; }
yy476:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT_ASSIGN; }
yy478:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ELLIPSIS; }
	}
}


/*
comment:
re2c:yyfill:check = 0;
<ST_IN_YOLANG,ST_INJECT>"*?	{ goto restart; } 
<ST_IN_YOLANG,ST_INJECT>{NEWLINE} { yoLexNewLine(parser); goto comment; }
<ST_IN_YOLANG,ST_INJECT>{ANY_CHAR} { goto comment; }
*/
}
