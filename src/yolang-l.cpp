/* Generated by re2c 0.13.5 on Tue Aug 04 21:05:18 2015 */
#include "yoparser.h"

// #define YYPARSE_PARAM parm
// #define YYLEX_PARAM parm

// #define YY_DECL int yolex(YYSTYPE *lvalp)

#ifdef YYDEBUG
#undef YYDEBUG
#endif

#if 1
# define YYDEBUG(s, c) printf("state: %d char: %c\n", s, c)
#else
# define YYDEBUG(s, c)
#endif

// #include "yolang-y.h"

#define YYCTYPE   unsigned char
#define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + YO_LEX_MAXFILL)) { return 0; } }
#define YYCURSOR  parser->cursor
#define YYLIMIT   parser->limit
#define YYMARKER  parser->marker

#if 0
#define YYGETSTATE()  parser->state
#define YYSETSTATE(s) parser->state = s
#define yych		 parser->ch
#define yyaccept	 parser->accept
#endif

#define YYGETCONDITION()  parser->state
#define YYSETCONDITION(c) parser->state = c

#define STATE(name)  YO_##name

/* emulate flex constructs */
#define BEGIN(state) YYSETSTATE(STATE(state))
#define YYSTATE      YYGETSTATE()
#define yytext       parser->text
#define yyleng       parser->textLen
#define yyless(x)    do { YYCURSOR = (YYCTYPE*)yytext + x; yyleng = (int)x; } while(0)
#define yymore()     goto yymore_restart

/* perform sanity check. If this message is triggered you should
   increase the YO_LEX_MAXFILL value in the zend_streams.h file */
#define YYMAXFILL 10
#if YO_LEX_MAXFILL < YYMAXFILL
# error YO_LEX_MAXFILL should be greater than or equal to YYMAXFILL
#endif 

int yoLexDec(void*, YYSTYPE*);
int yoLexBin(void*, YYSTYPE*);
int yoLexHex(void*, YYSTYPE*);
int yoLexFloat(void*, YYSTYPE*);
int yoLexName(void*, YYSTYPE*);
int yoLexChar(void*, YYSTYPE*);
void yoLexLineComment(void*);
void yoLexMultiLineComment(void*);
void yoLexNewLine(void*);
int yoLexSingleQuotedString(void * parm, YYSTYPE * elem);
int yoLexQuotedString(void * parm, YYSTYPE * elem);
int yoLexInjectOpenBrace(void * parm, YYSTYPE*);
int yoLexInjectCloseBrace(void * parm, YYSTYPE*);
int yoLexOpenBrace(void * parm);
int yoLexOpenBracket(void * parm);
int yoLexCloseBracket(void * parm);

int yolex(YYSTYPE * parserNode, void * parm)
{
	YoParserParams * parser = (YoParserParams*)parm;
	// YYMARKER = YYCURSOR;
	
restart:
	yytext = YYCURSOR;

// yymore_restart:

	// -f option
	// YYCTYPE yych;
	// unsigned int yyaccept = 0;
	

{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	if (YYGETCONDITION() < 1) {
		goto yyc_ST_INJECT;
	} else {
		goto yyc_ST_YOLANG;
	}
/* *********************************** */
yyc_ST_INJECT:
	{
		static const unsigned char yybm[] = {
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0, 128,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			128,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			120, 120, 104, 104, 104, 104, 104, 104, 
			104, 104,   0,   0,   0,   0,   0,   0, 
			 64,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			  0,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
		};

		YYFILL(10);
		yych = *YYCURSOR;
		switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x1F:
		case '#':
		case '$':
		case ',':
		case ';':
		case '?':
		case '[':
		case '\\':
		case ']':
		case '`':
		case '~':	goto yy66;
		case '\t':
		case ' ':	goto yy31;
		case '\n':	goto yy33;
		case '\r':	goto yy35;
		case '!':	goto yy26;
		case '"':	goto yy64;
		case '%':	goto yy14;
		case '&':	goto yy22;
		case '\'':	goto yy62;
		case '(':	goto yy54;
		case ')':	goto yy56;
		case '*':	goto yy10;
		case '+':	goto yy6;
		case '-':	goto yy8;
		case '.':	goto yy4;
		case '/':	goto yy12;
		case '0':	goto yy59;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':	goto yy61;
		case ':':	goto yy18;
		case '<':	goto yy27;
		case '=':	goto yy16;
		case '>':	goto yy29;
		case '@':	goto yy2;
		case '^':	goto yy24;
		case 'a':	goto yy49;
		case 'b':	goto yy38;
		case 'c':	goto yy36;
		case 'd':	goto yy42;
		case 'e':	goto yy48;
		case 'f':	goto yy41;
		case 'i':	goto yy39;
		case 'n':	goto yy45;
		case 'r':	goto yy47;
		case 's':	goto yy43;
		case 't':	goto yy44;
		case 'u':	goto yy40;
		case 'v':	goto yy46;
		case '{':	goto yy50;
		case '|':	goto yy20;
		case '}':	goto yy52;
		default:	goto yy58;
		}
yy2:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_AT; }
yy4:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy267;
		if (yych <= '/') goto yy5;
		if (yych <= '9') goto yy265;
yy5:
		yyleng = YYCURSOR - yytext;
		{ return T_DOT; }
yy6:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy263;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS; }
yy8:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy261;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS; }
yy10:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '*') goto yy255;
		if (yych == '=') goto yy257;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL; }
yy12:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '.') {
			if (yych == '*') goto yy249;
		} else {
			if (yych <= '/') goto yy251;
			if (yych == '=') goto yy253;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_DIV; }
yy14:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy247;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD; }
yy16:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy245;
		yyleng = YYCURSOR - yytext;
		{ return T_ASSIGN; }
yy18:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy243;
yy19:
		yyleng = YYCURSOR - yytext;
		{ return yoLexChar(parser, parserNode); }
yy20:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '|') goto yy241;
		yyleng = YYCURSOR - yytext;
		{ return T_OR; }
yy22:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '&') goto yy239;
		yyleng = YYCURSOR - yytext;
		{ return T_AND; }
yy24:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '^') goto yy237;
		yyleng = YYCURSOR - yytext;
		{ return T_XOR; }
yy26:
		yych = *++YYCURSOR;
		if (yych == '=') goto yy235;
		goto yy19;
yy27:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy233;
		yyleng = YYCURSOR - yytext;
		{ return T_LT; }
yy29:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy231;
		yyleng = YYCURSOR - yytext;
		{ return T_GT; }
yy31:
		++YYCURSOR;
		yych = *YYCURSOR;
		goto yy230;
yy32:
		yyleng = YYCURSOR - yytext;
		{ goto restart; }
yy33:
		++YYCURSOR;
yy34:
		yyleng = YYCURSOR - yytext;
		{ return T_NEWLINE; }
yy35:
		yych = *++YYCURSOR;
		if (yych == '\n') goto yy228;
		goto yy34;
yy36:
		++YYCURSOR;
		switch ((yych = *YYCURSOR)) {
		case 'a':	goto yy207;
		case 'h':	goto yy208;
		case 'l':	goto yy209;
		case 'o':	goto yy210;
		default:	goto yy86;
		}
yy37:
		yyleng = YYCURSOR - yytext;
		{ return yoLexName(parser, parserNode); }
yy38:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy199;
		if (yych == 'y') goto yy200;
		goto yy86;
yy39:
		yych = *++YYCURSOR;
		if (yych == 'f') goto yy176;
		if (yych == 'n') goto yy178;
		goto yy86;
yy40:
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy157;
		goto yy86;
yy41:
		yych = *++YYCURSOR;
		if (yych <= 'k') {
			if (yych == 'a') goto yy137;
			goto yy86;
		} else {
			if (yych <= 'l') goto yy138;
			if (yych == 'u') goto yy139;
			goto yy86;
		}
yy42:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy131;
		goto yy86;
yy43:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy121;
		goto yy86;
yy44:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy113;
		if (yych == 'y') goto yy114;
		goto yy86;
yy45:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy109;
		goto yy86;
yy46:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy102;
		if (yych == 'o') goto yy103;
		goto yy86;
yy47:
		yych = *++YYCURSOR;
		if (yych == 'e') goto yy96;
		goto yy86;
yy48:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy89;
		goto yy86;
yy49:
		yych = *++YYCURSOR;
		if (yych == 's') goto yy87;
		goto yy86;
yy50:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexInjectOpenBrace(parser, parserNode); }
yy52:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexInjectCloseBrace(parser, parserNode); }
yy54:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexOpenBracket(parser); }
yy56:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexCloseBracket(parser); }
yy58:
		yych = *++YYCURSOR;
		goto yy86;
yy59:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= 'E') {
			if (yych <= '/') {
				if (yych == '.') goto yy67;
			} else {
				if (yych <= '9') goto yy70;
				if (yych >= 'E') goto yy72;
			}
		} else {
			if (yych <= 'd') {
				if (yych == 'b') goto yy78;
			} else {
				if (yych <= 'e') goto yy72;
				if (yych == 'x') goto yy77;
			}
		}
yy60:
		yyleng = YYCURSOR - yytext;
		{ return yoLexDec(parser, parserNode); }
yy61:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= '9') {
			if (yych == '.') goto yy67;
			if (yych <= '/') goto yy60;
			goto yy70;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy60;
				goto yy72;
			} else {
				if (yych == 'e') goto yy72;
				goto yy60;
			}
		}
yy62:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexSingleQuotedString(parser, parserNode); }
yy64:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexQuotedString(parser, parserNode); }
yy66:
		yych = *++YYCURSOR;
		goto yy19;
yy67:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 8) {
			goto yy67;
		}
		if (yych == 'E') goto yy72;
		if (yych == 'e') goto yy72;
yy69:
		yyleng = YYCURSOR - yytext;
		{ return yoLexFloat(parser, parserNode); }
yy70:
		yyaccept = 0;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= '9') {
			if (yych == '.') goto yy67;
			if (yych <= '/') goto yy60;
			goto yy70;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy60;
			} else {
				if (yych != 'e') goto yy60;
			}
		}
yy72:
		yych = *++YYCURSOR;
		if (yych <= ',') {
			if (yych == '+') goto yy74;
		} else {
			if (yych <= '-') goto yy74;
			if (yych <= '/') goto yy73;
			if (yych <= '9') goto yy75;
		}
yy73:
		YYCURSOR = YYMARKER;
		if (yyaccept <= 0) {
			goto yy60;
		} else {
			goto yy69;
		}
yy74:
		yych = *++YYCURSOR;
		if (yych <= '/') goto yy73;
		if (yych >= ':') goto yy73;
yy75:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yych <= '/') goto yy69;
		if (yych <= '9') goto yy75;
		goto yy69;
yy77:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy82;
		}
		goto yy73;
yy78:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy79;
		}
		goto yy73;
yy79:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexBin(parser, parserNode); }
yy82:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy82;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexHex(parser, parserNode); }
yy85:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy86:
		if (yybm[0+yych] & 64) {
			goto yy85;
		}
		goto yy37;
yy87:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_AS; }
yy89:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy86;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '_') {
			if (yych <= '?') {
				if (yych <= '/') goto yy92;
				if (yych <= '9') goto yy85;
			} else {
				if (yych <= 'Z') goto yy85;
				if (yych >= '_') goto yy85;
			}
		} else {
			if (yych <= 'i') {
				if (yych <= '`') goto yy92;
				if (yych <= 'h') goto yy85;
				goto yy93;
			} else {
				if (yych <= 'z') goto yy85;
				if (yych >= 0x7F) goto yy85;
			}
		}
yy92:
		yyleng = YYCURSOR - yytext;
		{ return T_ELSE; }
yy93:
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_ELSEIF; }
yy96:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_RETURN; }
yy102:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy107;
		goto yy86;
yy103:
		yych = *++YYCURSOR;
		if (yych != 'i') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'd') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VOID; }
yy107:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VAR; }
yy109:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_NULL; }
yy113:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy118;
		goto yy86;
yy114:
		yych = *++YYCURSOR;
		if (yych != 'p') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TYPE; }
yy118:
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TRUE; }
yy121:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy86;
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy123;
		if (yych == 'u') goto yy124;
		goto yy86;
yy123:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy128;
		goto yy86;
yy124:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRUCT; }
yy128:
		yych = *++YYCURSOR;
		if (yych != 'g') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRING; }
yy131:
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'b') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy137:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy153;
		goto yy86;
yy138:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy143;
		goto yy86;
yy139:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FUNC; }
yy143:
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '?') {
			if (yych <= '3') {
				if (yych <= '/') goto yy146;
				if (yych <= '2') goto yy85;
				goto yy147;
			} else {
				if (yych == '6') goto yy148;
				if (yych <= '9') goto yy85;
			}
		} else {
			if (yych <= '_') {
				if (yych <= 'Z') goto yy85;
				if (yych >= '_') goto yy85;
			} else {
				if (yych <= '`') goto yy146;
				if (yych <= 'z') goto yy85;
				if (yych >= 0x7F) goto yy85;
			}
		}
yy146:
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy147:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy151;
		goto yy86;
yy148:
		yych = *++YYCURSOR;
		if (yych != '4') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy151:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy153:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FALSE; }
yy157:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy85;
				} else {
					if (yych <= '1') goto yy163;
					if (yych <= '2') goto yy85;
					goto yy164;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy85;
					goto yy165;
				} else {
					if (yych == '8') goto yy161;
					goto yy85;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy85;
				} else {
					if (yych == '_') goto yy85;
				}
			} else {
				if (yych <= 'p') {
					if (yych <= 'o') goto yy85;
					goto yy166;
				} else {
					if (yych <= 'z') goto yy85;
					if (yych >= 0x7F) goto yy85;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_UINT64 : T_UINT32; }
yy161:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT8; }
yy163:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy174;
		goto yy86;
yy164:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy172;
		goto yy86;
yy165:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy170;
		goto yy86;
yy166:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINTPTR; }
yy170:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT64; }
yy172:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT32; }
yy174:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT16; }
yy176:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_IF; }
yy178:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy85;
				} else {
					if (yych <= '1') goto yy181;
					if (yych <= '2') goto yy85;
					goto yy182;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy85;
					goto yy183;
				} else {
					if (yych == '8') goto yy184;
					goto yy85;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy85;
				} else {
					if (yych == '_') goto yy85;
				}
			} else {
				if (yych <= 'e') {
					if (yych <= 'd') goto yy85;
					goto yy186;
				} else {
					if (yych <= 'z') goto yy85;
					if (yych >= 0x7F) goto yy85;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_INT64 : T_INT32; }
yy181:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy197;
		goto yy86;
yy182:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy195;
		goto yy86;
yy183:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy193;
		goto yy86;
yy184:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy186:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INTERFACE; }
yy193:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT64; }
yy195:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT32; }
yy197:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT16; }
yy199:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy204;
		goto yy86;
yy200:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy204:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_BOOL; }
yy207:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy224;
		goto yy86;
yy208:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy219;
		goto yy86;
yy209:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy215;
		goto yy86;
yy210:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CONST; }
yy215:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CLASS; }
yy219:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy220;
		if (yych == 'r') goto yy222;
		goto yy86;
yy220:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CHAN; }
yy222:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy224:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'h') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CATCH; }
yy228:
		yych = *++YYCURSOR;
		goto yy34;
yy229:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy230:
		if (yybm[0+yych] & 128) {
			goto yy229;
		}
		goto yy32;
yy231:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_GE; }
yy233:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_LE; }
yy235:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_NE; }
yy237:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_XORXOR; }
yy239:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ANDAND; }
yy241:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_OROR; }
yy243:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DECL_ASSIGN; }
yy245:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_EQ; }
yy247:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD_ASSIGN; }
yy249:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexMultiLineComment(parser); goto restart; }
yy251:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexLineComment(parser); goto restart; }
yy253:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DIV_ASSIGN; }
yy255:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy259;
		yyleng = YYCURSOR - yytext;
		{ return T_POW; }
yy257:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL_ASSIGN; }
yy259:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_POW_ASSIGN; }
yy261:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS_ASSIGN; }
yy263:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS_ASSIGN; }
yy265:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= 'D') {
			if (yych <= '/') goto yy69;
			if (yych <= '9') goto yy265;
			goto yy69;
		} else {
			if (yych <= 'E') goto yy72;
			if (yych == 'e') goto yy72;
			goto yy69;
		}
yy267:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy271;
		if (yych == '=') goto yy269;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT; }
yy269:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT_ASSIGN; }
yy271:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ELLIPSIS; }
	}
/* *********************************** */
yyc_ST_YOLANG:
	{
		static const unsigned char yybm[] = {
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0, 128,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			128,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			120, 120, 104, 104, 104, 104, 104, 104, 
			104, 104,   0,   0,   0,   0,   0,   0, 
			 64,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			  0,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
		};
		YYFILL(10);
		yych = *YYCURSOR;
		switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x1F:
		case '#':
		case '$':
		case ',':
		case ';':
		case '?':
		case '[':
		case '\\':
		case ']':
		case '`':
		case '~':	goto yy337;
		case '\t':
		case ' ':	goto yy304;
		case '\n':	goto yy306;
		case '\r':	goto yy308;
		case '!':	goto yy299;
		case '"':	goto yy335;
		case '%':	goto yy287;
		case '&':	goto yy295;
		case '\'':	goto yy333;
		case '(':	goto yy325;
		case ')':
		case '}':	goto yy327;
		case '*':	goto yy283;
		case '+':	goto yy279;
		case '-':	goto yy281;
		case '.':	goto yy277;
		case '/':	goto yy285;
		case '0':	goto yy330;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':	goto yy332;
		case ':':	goto yy291;
		case '<':	goto yy300;
		case '=':	goto yy289;
		case '>':	goto yy302;
		case '@':	goto yy275;
		case '^':	goto yy297;
		case 'a':	goto yy322;
		case 'b':	goto yy311;
		case 'c':	goto yy309;
		case 'd':	goto yy315;
		case 'e':	goto yy321;
		case 'f':	goto yy314;
		case 'i':	goto yy312;
		case 'n':	goto yy318;
		case 'r':	goto yy320;
		case 's':	goto yy316;
		case 't':	goto yy317;
		case 'u':	goto yy313;
		case 'v':	goto yy319;
		case '{':	goto yy323;
		case '|':	goto yy293;
		default:	goto yy329;
		}
yy275:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_AT; }
yy277:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy538;
		if (yych <= '/') goto yy278;
		if (yych <= '9') goto yy536;
yy278:
		yyleng = YYCURSOR - yytext;
		{ return T_DOT; }
yy279:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy534;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS; }
yy281:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy532;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS; }
yy283:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '*') goto yy526;
		if (yych == '=') goto yy528;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL; }
yy285:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '.') {
			if (yych == '*') goto yy520;
		} else {
			if (yych <= '/') goto yy522;
			if (yych == '=') goto yy524;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_DIV; }
yy287:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy518;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD; }
yy289:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy516;
		yyleng = YYCURSOR - yytext;
		{ return T_ASSIGN; }
yy291:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy514;
yy292:
		yyleng = YYCURSOR - yytext;
		{ return yoLexChar(parser, parserNode); }
yy293:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '|') goto yy512;
		yyleng = YYCURSOR - yytext;
		{ return T_OR; }
yy295:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '&') goto yy510;
		yyleng = YYCURSOR - yytext;
		{ return T_AND; }
yy297:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '^') goto yy508;
		yyleng = YYCURSOR - yytext;
		{ return T_XOR; }
yy299:
		yych = *++YYCURSOR;
		if (yych == '=') goto yy506;
		goto yy292;
yy300:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy504;
		yyleng = YYCURSOR - yytext;
		{ return T_LT; }
yy302:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy502;
		yyleng = YYCURSOR - yytext;
		{ return T_GT; }
yy304:
		++YYCURSOR;
		yych = *YYCURSOR;
		goto yy501;
yy305:
		yyleng = YYCURSOR - yytext;
		{ goto restart; }
yy306:
		++YYCURSOR;
yy307:
		yyleng = YYCURSOR - yytext;
		{ return T_NEWLINE; }
yy308:
		yych = *++YYCURSOR;
		if (yych == '\n') goto yy499;
		goto yy307;
yy309:
		++YYCURSOR;
		switch ((yych = *YYCURSOR)) {
		case 'a':	goto yy478;
		case 'h':	goto yy479;
		case 'l':	goto yy480;
		case 'o':	goto yy481;
		default:	goto yy357;
		}
yy310:
		yyleng = YYCURSOR - yytext;
		{ return yoLexName(parser, parserNode); }
yy311:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy470;
		if (yych == 'y') goto yy471;
		goto yy357;
yy312:
		yych = *++YYCURSOR;
		if (yych == 'f') goto yy447;
		if (yych == 'n') goto yy449;
		goto yy357;
yy313:
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy428;
		goto yy357;
yy314:
		yych = *++YYCURSOR;
		if (yych <= 'k') {
			if (yych == 'a') goto yy408;
			goto yy357;
		} else {
			if (yych <= 'l') goto yy409;
			if (yych == 'u') goto yy410;
			goto yy357;
		}
yy315:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy402;
		goto yy357;
yy316:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy392;
		goto yy357;
yy317:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy384;
		if (yych == 'y') goto yy385;
		goto yy357;
yy318:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy380;
		goto yy357;
yy319:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy373;
		if (yych == 'o') goto yy374;
		goto yy357;
yy320:
		yych = *++YYCURSOR;
		if (yych == 'e') goto yy367;
		goto yy357;
yy321:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy360;
		goto yy357;
yy322:
		yych = *++YYCURSOR;
		if (yych == 's') goto yy358;
		goto yy357;
yy323:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexOpenBrace(parser); }
yy325:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexOpenBracket(parser); }
yy327:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexCloseBracket(parser); }
yy329:
		yych = *++YYCURSOR;
		goto yy357;
yy330:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= 'E') {
			if (yych <= '/') {
				if (yych == '.') goto yy338;
			} else {
				if (yych <= '9') goto yy341;
				if (yych >= 'E') goto yy343;
			}
		} else {
			if (yych <= 'd') {
				if (yych == 'b') goto yy349;
			} else {
				if (yych <= 'e') goto yy343;
				if (yych == 'x') goto yy348;
			}
		}
yy331:
		yyleng = YYCURSOR - yytext;
		{ return yoLexDec(parser, parserNode); }
yy332:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= '9') {
			if (yych == '.') goto yy338;
			if (yych <= '/') goto yy331;
			goto yy341;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy331;
				goto yy343;
			} else {
				if (yych == 'e') goto yy343;
				goto yy331;
			}
		}
yy333:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexSingleQuotedString(parser, parserNode); }
yy335:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexQuotedString(parser, parserNode); }
yy337:
		yych = *++YYCURSOR;
		goto yy292;
yy338:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 8) {
			goto yy338;
		}
		if (yych == 'E') goto yy343;
		if (yych == 'e') goto yy343;
yy340:
		yyleng = YYCURSOR - yytext;
		{ return yoLexFloat(parser, parserNode); }
yy341:
		yyaccept = 0;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= '9') {
			if (yych == '.') goto yy338;
			if (yych <= '/') goto yy331;
			goto yy341;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy331;
			} else {
				if (yych != 'e') goto yy331;
			}
		}
yy343:
		yych = *++YYCURSOR;
		if (yych <= ',') {
			if (yych == '+') goto yy345;
		} else {
			if (yych <= '-') goto yy345;
			if (yych <= '/') goto yy344;
			if (yych <= '9') goto yy346;
		}
yy344:
		YYCURSOR = YYMARKER;
		if (yyaccept <= 0) {
			goto yy331;
		} else {
			goto yy340;
		}
yy345:
		yych = *++YYCURSOR;
		if (yych <= '/') goto yy344;
		if (yych >= ':') goto yy344;
yy346:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yych <= '/') goto yy340;
		if (yych <= '9') goto yy346;
		goto yy340;
yy348:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy353;
		}
		goto yy344;
yy349:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy350;
		}
		goto yy344;
yy350:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy350;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexBin(parser, parserNode); }
yy353:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy353;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexHex(parser, parserNode); }
yy356:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy357:
		if (yybm[0+yych] & 64) {
			goto yy356;
		}
		goto yy310;
yy358:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_AS; }
yy360:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy357;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '_') {
			if (yych <= '?') {
				if (yych <= '/') goto yy363;
				if (yych <= '9') goto yy356;
			} else {
				if (yych <= 'Z') goto yy356;
				if (yych >= '_') goto yy356;
			}
		} else {
			if (yych <= 'i') {
				if (yych <= '`') goto yy363;
				if (yych <= 'h') goto yy356;
				goto yy364;
			} else {
				if (yych <= 'z') goto yy356;
				if (yych >= 0x7F) goto yy356;
			}
		}
yy363:
		yyleng = YYCURSOR - yytext;
		{ return T_ELSE; }
yy364:
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_ELSEIF; }
yy367:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_RETURN; }
yy373:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy378;
		goto yy357;
yy374:
		yych = *++YYCURSOR;
		if (yych != 'i') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'd') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VOID; }
yy378:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VAR; }
yy380:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_NULL; }
yy384:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy389;
		goto yy357;
yy385:
		yych = *++YYCURSOR;
		if (yych != 'p') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TYPE; }
yy389:
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TRUE; }
yy392:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy357;
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy394;
		if (yych == 'u') goto yy395;
		goto yy357;
yy394:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy399;
		goto yy357;
yy395:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRUCT; }
yy399:
		yych = *++YYCURSOR;
		if (yych != 'g') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRING; }
yy402:
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'b') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy408:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy424;
		goto yy357;
yy409:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy414;
		goto yy357;
yy410:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FUNC; }
yy414:
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy357;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '?') {
			if (yych <= '3') {
				if (yych <= '/') goto yy417;
				if (yych <= '2') goto yy356;
				goto yy418;
			} else {
				if (yych == '6') goto yy419;
				if (yych <= '9') goto yy356;
			}
		} else {
			if (yych <= '_') {
				if (yych <= 'Z') goto yy356;
				if (yych >= '_') goto yy356;
			} else {
				if (yych <= '`') goto yy417;
				if (yych <= 'z') goto yy356;
				if (yych >= 0x7F) goto yy356;
			}
		}
yy417:
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy418:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy422;
		goto yy357;
yy419:
		yych = *++YYCURSOR;
		if (yych != '4') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy422:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy424:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FALSE; }
yy428:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy357;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy356;
				} else {
					if (yych <= '1') goto yy434;
					if (yych <= '2') goto yy356;
					goto yy435;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy356;
					goto yy436;
				} else {
					if (yych == '8') goto yy432;
					goto yy356;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy356;
				} else {
					if (yych == '_') goto yy356;
				}
			} else {
				if (yych <= 'p') {
					if (yych <= 'o') goto yy356;
					goto yy437;
				} else {
					if (yych <= 'z') goto yy356;
					if (yych >= 0x7F) goto yy356;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_UINT64 : T_UINT32; }
yy432:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT8; }
yy434:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy445;
		goto yy357;
yy435:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy443;
		goto yy357;
yy436:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy441;
		goto yy357;
yy437:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINTPTR; }
yy441:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT64; }
yy443:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT32; }
yy445:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT16; }
yy447:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_IF; }
yy449:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy357;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy356;
				} else {
					if (yych <= '1') goto yy452;
					if (yych <= '2') goto yy356;
					goto yy453;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy356;
					goto yy454;
				} else {
					if (yych == '8') goto yy455;
					goto yy356;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy356;
				} else {
					if (yych == '_') goto yy356;
				}
			} else {
				if (yych <= 'e') {
					if (yych <= 'd') goto yy356;
					goto yy457;
				} else {
					if (yych <= 'z') goto yy356;
					if (yych >= 0x7F) goto yy356;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_INT64 : T_INT32; }
yy452:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy468;
		goto yy357;
yy453:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy466;
		goto yy357;
yy454:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy464;
		goto yy357;
yy455:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy457:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INTERFACE; }
yy464:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT64; }
yy466:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT32; }
yy468:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT16; }
yy470:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy475;
		goto yy357;
yy471:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy475:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_BOOL; }
yy478:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy495;
		goto yy357;
yy479:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy490;
		goto yy357;
yy480:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy486;
		goto yy357;
yy481:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CONST; }
yy486:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CLASS; }
yy490:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy491;
		if (yych == 'r') goto yy493;
		goto yy357;
yy491:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CHAN; }
yy493:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy495:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy357;
		yych = *++YYCURSOR;
		if (yych != 'h') goto yy357;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy356;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CATCH; }
yy499:
		yych = *++YYCURSOR;
		goto yy307;
yy500:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy501:
		if (yybm[0+yych] & 128) {
			goto yy500;
		}
		goto yy305;
yy502:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_GE; }
yy504:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_LE; }
yy506:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_NE; }
yy508:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_XORXOR; }
yy510:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ANDAND; }
yy512:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_OROR; }
yy514:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DECL_ASSIGN; }
yy516:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_EQ; }
yy518:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD_ASSIGN; }
yy520:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexMultiLineComment(parser); goto restart; }
yy522:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexLineComment(parser); goto restart; }
yy524:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DIV_ASSIGN; }
yy526:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy530;
		yyleng = YYCURSOR - yytext;
		{ return T_POW; }
yy528:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL_ASSIGN; }
yy530:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_POW_ASSIGN; }
yy532:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS_ASSIGN; }
yy534:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS_ASSIGN; }
yy536:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= 'D') {
			if (yych <= '/') goto yy340;
			if (yych <= '9') goto yy536;
			goto yy340;
		} else {
			if (yych <= 'E') goto yy343;
			if (yych == 'e') goto yy343;
			goto yy340;
		}
yy538:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy542;
		if (yych == '=') goto yy540;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT; }
yy540:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT_ASSIGN; }
yy542:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ELLIPSIS; }
	}
}


/*
comment:
re2c:yyfill:check = 0;
<ST_YOLANG,ST_INJECT>"*?	{ goto restart; } 
<ST_YOLANG,ST_INJECT>{NEWLINE} { yoLexNewLine(parser); goto comment; }
<ST_YOLANG,ST_INJECT>{ANY_CHAR} { goto comment; }
*/
}
