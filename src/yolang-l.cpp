/* Generated by re2c 0.13.5 on Wed Aug 12 19:44:16 2015 */
#include "yoparser.h"

// #define YYPARSE_PARAM parm
// #define YYLEX_PARAM parm

// #define YY_DECL int yolex(YYSTYPE *lvalp)

#ifdef YYDEBUG
#undef YYDEBUG
#endif

#if 1
# define YYDEBUG(s, c) printf("state: %d char: %c\n", s, c)
#else
# define YYDEBUG(s, c)
#endif

// #include "yolang-y.h"

#define YYCTYPE   unsigned char
#define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + YO_LEX_MAXFILL)) { return 0; } }
#define YYCURSOR  parser->cursor
#define YYLIMIT   parser->limit
#define YYMARKER  parser->marker

#if 0
#define YYGETSTATE()  parser->state
#define YYSETSTATE(s) parser->state = s
#define yych		 parser->ch
#define yyaccept	 parser->accept
#endif

#define YYGETCONDITION()  parser->state
#define YYSETCONDITION(c) parser->state = c

#define STATE(name)  YO_##name

/* emulate flex constructs */
#define BEGIN(state) YYSETSTATE(STATE(state))
#define YYSTATE      YYGETSTATE()
#define yytext       parser->text
#define yyleng       parser->textLen
#define yyless(x)    do { YYCURSOR = (YYCTYPE*)yytext + x; yyleng = (int)x; } while(0)
#define yymore()     goto yymore_restart

/* perform sanity check. If this message is triggered you should
   increase the YO_LEX_MAXFILL value in the zend_streams.h file */
#define YYMAXFILL 9
#if YO_LEX_MAXFILL < YYMAXFILL
# error YO_LEX_MAXFILL should be greater than or equal to YYMAXFILL
#endif 

int yoLexDec(void*, YYSTYPE*);
int yoLexBin(void*, YYSTYPE*);
int yoLexHex(void*, YYSTYPE*);
int yoLexFloat(void*, YYSTYPE*);
int yoLexName(void*, YYSTYPE*);
int yoLexChar(void*, YYSTYPE*);
void yoLexLineComment(void*);
void yoLexMultiLineComment(void*);
void yoLexNewLine(void*);
int yoLexSingleQuotedString(void * parm, YYSTYPE * elem);
int yoLexQuotedString(void * parm, YYSTYPE * elem);
int yoLexInjectOpenBrace(void * parm, YYSTYPE*);
int yoLexInjectCloseBrace(void * parm, YYSTYPE*);
int yoLexOpenBrace(void * parm);
int yoLexOpenBracket(void * parm);
int yoLexCloseBracket(void * parm);

int yolex(YYSTYPE * parserNode, void * parm)
{
	YoParserParams * parser = (YoParserParams*)parm;
	// YYMARKER = YYCURSOR;
	
restart:
	yytext = YYCURSOR;

// yymore_restart:

	// -f option
	// YYCTYPE yych;
	// unsigned int yyaccept = 0;
	

{
	YYCTYPE yych;
	unsigned int yyaccept = 0;
	if (YYGETCONDITION() < 1) {
		goto yyc_ST_INJECT;
	} else {
		goto yyc_ST_YOLANG;
	}
/* *********************************** */
yyc_ST_INJECT:
	{
		static const unsigned char yybm[] = {
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0, 128,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			128,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			120, 120, 104, 104, 104, 104, 104, 104, 
			104, 104,   0,   0,   0,   0,   0,   0, 
			 64,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			  0,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
		};

		YYFILL(9);
		yych = *YYCURSOR;
		switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x1F:
		case '#':
		case '$':
		case ',':
		case ';':
		case '?':
		case '[':
		case '\\':
		case ']':
		case '`':
		case '~':	goto yy66;
		case '\t':
		case ' ':	goto yy31;
		case '\n':	goto yy33;
		case '\r':	goto yy35;
		case '!':	goto yy26;
		case '"':	goto yy64;
		case '%':	goto yy14;
		case '&':	goto yy22;
		case '\'':	goto yy62;
		case '(':	goto yy54;
		case ')':	goto yy56;
		case '*':	goto yy10;
		case '+':	goto yy6;
		case '-':	goto yy8;
		case '.':	goto yy4;
		case '/':	goto yy12;
		case '0':	goto yy59;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':	goto yy61;
		case ':':	goto yy18;
		case '<':	goto yy27;
		case '=':	goto yy16;
		case '>':	goto yy29;
		case '@':	goto yy2;
		case '^':	goto yy24;
		case 'a':	goto yy49;
		case 'b':	goto yy38;
		case 'c':	goto yy36;
		case 'd':	goto yy42;
		case 'e':	goto yy48;
		case 'f':	goto yy41;
		case 'i':	goto yy39;
		case 'n':	goto yy45;
		case 'r':	goto yy47;
		case 's':	goto yy43;
		case 't':	goto yy44;
		case 'u':	goto yy40;
		case 'v':	goto yy46;
		case '{':	goto yy50;
		case '|':	goto yy20;
		case '}':	goto yy52;
		default:	goto yy58;
		}
yy2:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_AT; }
yy4:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy266;
		if (yych <= '/') goto yy5;
		if (yych <= '9') goto yy264;
yy5:
		yyleng = YYCURSOR - yytext;
		{ return T_DOT; }
yy6:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy262;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS; }
yy8:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy260;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS; }
yy10:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '*') goto yy254;
		if (yych == '=') goto yy256;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL; }
yy12:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '.') {
			if (yych == '*') goto yy248;
		} else {
			if (yych <= '/') goto yy250;
			if (yych == '=') goto yy252;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_DIV; }
yy14:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy246;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD; }
yy16:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy244;
		yyleng = YYCURSOR - yytext;
		{ return T_ASSIGN; }
yy18:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy242;
yy19:
		yyleng = YYCURSOR - yytext;
		{ return yoLexChar(parser, parserNode); }
yy20:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '|') goto yy240;
		yyleng = YYCURSOR - yytext;
		{ return T_OR; }
yy22:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '&') goto yy238;
		yyleng = YYCURSOR - yytext;
		{ return T_AND; }
yy24:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '^') goto yy236;
		yyleng = YYCURSOR - yytext;
		{ return T_XOR; }
yy26:
		yych = *++YYCURSOR;
		if (yych == '=') goto yy234;
		goto yy19;
yy27:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy232;
		yyleng = YYCURSOR - yytext;
		{ return T_LT; }
yy29:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy230;
		yyleng = YYCURSOR - yytext;
		{ return T_GT; }
yy31:
		++YYCURSOR;
		yych = *YYCURSOR;
		goto yy229;
yy32:
		yyleng = YYCURSOR - yytext;
		{ goto restart; }
yy33:
		++YYCURSOR;
yy34:
		yyleng = YYCURSOR - yytext;
		{ return T_NEWLINE; }
yy35:
		yych = *++YYCURSOR;
		if (yych == '\n') goto yy227;
		goto yy34;
yy36:
		++YYCURSOR;
		switch ((yych = *YYCURSOR)) {
		case 'a':	goto yy200;
		case 'h':	goto yy201;
		case 'l':	goto yy202;
		case 'o':	goto yy203;
		default:	goto yy86;
		}
yy37:
		yyleng = YYCURSOR - yytext;
		{ return yoLexName(parser, parserNode); }
yy38:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy192;
		if (yych == 'y') goto yy193;
		goto yy86;
yy39:
		yych = *++YYCURSOR;
		if (yych == 'f') goto yy176;
		if (yych == 'n') goto yy178;
		goto yy86;
yy40:
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy157;
		goto yy86;
yy41:
		yych = *++YYCURSOR;
		if (yych <= 'k') {
			if (yych == 'a') goto yy137;
			goto yy86;
		} else {
			if (yych <= 'l') goto yy138;
			if (yych == 'u') goto yy139;
			goto yy86;
		}
yy42:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy131;
		goto yy86;
yy43:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy121;
		goto yy86;
yy44:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy113;
		if (yych == 'y') goto yy114;
		goto yy86;
yy45:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy109;
		goto yy86;
yy46:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy102;
		if (yych == 'o') goto yy103;
		goto yy86;
yy47:
		yych = *++YYCURSOR;
		if (yych == 'e') goto yy96;
		goto yy86;
yy48:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy89;
		goto yy86;
yy49:
		yych = *++YYCURSOR;
		if (yych == 's') goto yy87;
		goto yy86;
yy50:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexInjectOpenBrace(parser, parserNode); }
yy52:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexInjectCloseBrace(parser, parserNode); }
yy54:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexOpenBracket(parser); }
yy56:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexCloseBracket(parser); }
yy58:
		yych = *++YYCURSOR;
		goto yy86;
yy59:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= 'E') {
			if (yych <= '/') {
				if (yych == '.') goto yy67;
			} else {
				if (yych <= '9') goto yy70;
				if (yych >= 'E') goto yy72;
			}
		} else {
			if (yych <= 'd') {
				if (yych == 'b') goto yy78;
			} else {
				if (yych <= 'e') goto yy72;
				if (yych == 'x') goto yy77;
			}
		}
yy60:
		yyleng = YYCURSOR - yytext;
		{ return yoLexDec(parser, parserNode); }
yy61:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= '9') {
			if (yych == '.') goto yy67;
			if (yych <= '/') goto yy60;
			goto yy70;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy60;
				goto yy72;
			} else {
				if (yych == 'e') goto yy72;
				goto yy60;
			}
		}
yy62:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexSingleQuotedString(parser, parserNode); }
yy64:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexQuotedString(parser, parserNode); }
yy66:
		yych = *++YYCURSOR;
		goto yy19;
yy67:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 8) {
			goto yy67;
		}
		if (yych == 'E') goto yy72;
		if (yych == 'e') goto yy72;
yy69:
		yyleng = YYCURSOR - yytext;
		{ return yoLexFloat(parser, parserNode); }
yy70:
		yyaccept = 0;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= '9') {
			if (yych == '.') goto yy67;
			if (yych <= '/') goto yy60;
			goto yy70;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy60;
			} else {
				if (yych != 'e') goto yy60;
			}
		}
yy72:
		yych = *++YYCURSOR;
		if (yych <= ',') {
			if (yych == '+') goto yy74;
		} else {
			if (yych <= '-') goto yy74;
			if (yych <= '/') goto yy73;
			if (yych <= '9') goto yy75;
		}
yy73:
		YYCURSOR = YYMARKER;
		if (yyaccept <= 0) {
			goto yy60;
		} else {
			goto yy69;
		}
yy74:
		yych = *++YYCURSOR;
		if (yych <= '/') goto yy73;
		if (yych >= ':') goto yy73;
yy75:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yych <= '/') goto yy69;
		if (yych <= '9') goto yy75;
		goto yy69;
yy77:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy82;
		}
		goto yy73;
yy78:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy79;
		}
		goto yy73;
yy79:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy79;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexBin(parser, parserNode); }
yy82:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy82;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexHex(parser, parserNode); }
yy85:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy86:
		if (yybm[0+yych] & 64) {
			goto yy85;
		}
		goto yy37;
yy87:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_AS; }
yy89:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy86;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '_') {
			if (yych <= '?') {
				if (yych <= '/') goto yy92;
				if (yych <= '9') goto yy85;
			} else {
				if (yych <= 'Z') goto yy85;
				if (yych >= '_') goto yy85;
			}
		} else {
			if (yych <= 'i') {
				if (yych <= '`') goto yy92;
				if (yych <= 'h') goto yy85;
				goto yy93;
			} else {
				if (yych <= 'z') goto yy85;
				if (yych >= 0x7F) goto yy85;
			}
		}
yy92:
		yyleng = YYCURSOR - yytext;
		{ return T_ELSE; }
yy93:
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_ELSEIF; }
yy96:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_RETURN; }
yy102:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy107;
		goto yy86;
yy103:
		yych = *++YYCURSOR;
		if (yych != 'i') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'd') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VOID; }
yy107:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VAR; }
yy109:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_NULL; }
yy113:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy118;
		goto yy86;
yy114:
		yych = *++YYCURSOR;
		if (yych != 'p') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TYPE; }
yy118:
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TRUE; }
yy121:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy86;
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy123;
		if (yych == 'u') goto yy124;
		goto yy86;
yy123:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy128;
		goto yy86;
yy124:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRUCT; }
yy128:
		yych = *++YYCURSOR;
		if (yych != 'g') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRING; }
yy131:
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'b') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy137:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy153;
		goto yy86;
yy138:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy143;
		goto yy86;
yy139:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FUNC; }
yy143:
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '?') {
			if (yych <= '3') {
				if (yych <= '/') goto yy146;
				if (yych <= '2') goto yy85;
				goto yy147;
			} else {
				if (yych == '6') goto yy148;
				if (yych <= '9') goto yy85;
			}
		} else {
			if (yych <= '_') {
				if (yych <= 'Z') goto yy85;
				if (yych >= '_') goto yy85;
			} else {
				if (yych <= '`') goto yy146;
				if (yych <= 'z') goto yy85;
				if (yych >= 0x7F) goto yy85;
			}
		}
yy146:
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy147:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy151;
		goto yy86;
yy148:
		yych = *++YYCURSOR;
		if (yych != '4') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy151:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy153:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FALSE; }
yy157:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy85;
				} else {
					if (yych <= '1') goto yy163;
					if (yych <= '2') goto yy85;
					goto yy164;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy85;
					goto yy165;
				} else {
					if (yych == '8') goto yy161;
					goto yy85;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy85;
				} else {
					if (yych == '_') goto yy85;
				}
			} else {
				if (yych <= 'p') {
					if (yych <= 'o') goto yy85;
					goto yy166;
				} else {
					if (yych <= 'z') goto yy85;
					if (yych >= 0x7F) goto yy85;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_UINT64 : T_UINT32; }
yy161:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT8; }
yy163:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy174;
		goto yy86;
yy164:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy172;
		goto yy86;
yy165:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy170;
		goto yy86;
yy166:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINTPTR; }
yy170:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT64; }
yy172:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT32; }
yy174:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT16; }
yy176:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_IF; }
yy178:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '8') {
			if (yych <= '2') {
				if (yych <= '/') goto yy180;
				if (yych == '1') goto yy181;
				goto yy85;
			} else {
				if (yych <= '5') {
					if (yych <= '3') goto yy182;
					goto yy85;
				} else {
					if (yych <= '6') goto yy183;
					if (yych <= '7') goto yy85;
					goto yy184;
				}
			}
		} else {
			if (yych <= '^') {
				if (yych <= '9') goto yy85;
				if (yych <= '?') goto yy180;
				if (yych <= 'Z') goto yy85;
			} else {
				if (yych <= '`') {
					if (yych <= '_') goto yy85;
				} else {
					if (yych <= 'z') goto yy85;
					if (yych >= 0x7F) goto yy85;
				}
			}
		}
yy180:
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_INT64 : T_INT32; }
yy181:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy190;
		goto yy86;
yy182:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy188;
		goto yy86;
yy183:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy186;
		goto yy86;
yy184:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy186:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT64; }
yy188:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT32; }
yy190:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT16; }
yy192:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy197;
		goto yy86;
yy193:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy197:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_BOOL; }
yy200:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy223;
		goto yy86;
yy201:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy218;
		goto yy86;
yy202:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy214;
		goto yy86;
yy203:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy86;
		yych = *++YYCURSOR;
		if (yych <= 'r') goto yy86;
		if (yych <= 's') goto yy205;
		if (yych <= 't') goto yy206;
		goto yy86;
yy205:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy212;
		goto yy86;
yy206:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CONTRACT; }
yy212:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CONST; }
yy214:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CLASS; }
yy218:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy219;
		if (yych == 'r') goto yy221;
		goto yy86;
yy219:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CHAN; }
yy221:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy223:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy86;
		yych = *++YYCURSOR;
		if (yych != 'h') goto yy86;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy85;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CATCH; }
yy227:
		yych = *++YYCURSOR;
		goto yy34;
yy228:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy229:
		if (yybm[0+yych] & 128) {
			goto yy228;
		}
		goto yy32;
yy230:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_GE; }
yy232:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_LE; }
yy234:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_NE; }
yy236:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_XORXOR; }
yy238:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ANDAND; }
yy240:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_OROR; }
yy242:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DECL_ASSIGN; }
yy244:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_EQ; }
yy246:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD_ASSIGN; }
yy248:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexMultiLineComment(parser); goto restart; }
yy250:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexLineComment(parser); goto restart; }
yy252:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DIV_ASSIGN; }
yy254:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy258;
		yyleng = YYCURSOR - yytext;
		{ return T_POW; }
yy256:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL_ASSIGN; }
yy258:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_POW_ASSIGN; }
yy260:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS_ASSIGN; }
yy262:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS_ASSIGN; }
yy264:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= 'D') {
			if (yych <= '/') goto yy69;
			if (yych <= '9') goto yy264;
			goto yy69;
		} else {
			if (yych <= 'E') goto yy72;
			if (yych == 'e') goto yy72;
			goto yy69;
		}
yy266:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy270;
		if (yych == '=') goto yy268;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT; }
yy268:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT_ASSIGN; }
yy270:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ELLIPSIS; }
	}
/* *********************************** */
yyc_ST_YOLANG:
	{
		static const unsigned char yybm[] = {
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0, 128,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			128,   0,   0,   0,   0,   0,   0,   0, 
			  0,   0,   0,   0,   0,   0,   0,   0, 
			120, 120, 104, 104, 104, 104, 104, 104, 
			104, 104,   0,   0,   0,   0,   0,   0, 
			 64,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			  0,  96,  96,  96,  96,  96,  96,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,   0,   0,   0,   0,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
			 64,  64,  64,  64,  64,  64,  64,  64, 
		};
		YYFILL(9);
		yych = *YYCURSOR;
		switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x1F:
		case '#':
		case '$':
		case ',':
		case ';':
		case '?':
		case '[':
		case '\\':
		case ']':
		case '`':
		case '~':	goto yy336;
		case '\t':
		case ' ':	goto yy303;
		case '\n':	goto yy305;
		case '\r':	goto yy307;
		case '!':	goto yy298;
		case '"':	goto yy334;
		case '%':	goto yy286;
		case '&':	goto yy294;
		case '\'':	goto yy332;
		case '(':	goto yy324;
		case ')':
		case '}':	goto yy326;
		case '*':	goto yy282;
		case '+':	goto yy278;
		case '-':	goto yy280;
		case '.':	goto yy276;
		case '/':	goto yy284;
		case '0':	goto yy329;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':	goto yy331;
		case ':':	goto yy290;
		case '<':	goto yy299;
		case '=':	goto yy288;
		case '>':	goto yy301;
		case '@':	goto yy274;
		case '^':	goto yy296;
		case 'a':	goto yy321;
		case 'b':	goto yy310;
		case 'c':	goto yy308;
		case 'd':	goto yy314;
		case 'e':	goto yy320;
		case 'f':	goto yy313;
		case 'i':	goto yy311;
		case 'n':	goto yy317;
		case 'r':	goto yy319;
		case 's':	goto yy315;
		case 't':	goto yy316;
		case 'u':	goto yy312;
		case 'v':	goto yy318;
		case '{':	goto yy322;
		case '|':	goto yy292;
		default:	goto yy328;
		}
yy274:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_AT; }
yy276:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy536;
		if (yych <= '/') goto yy277;
		if (yych <= '9') goto yy534;
yy277:
		yyleng = YYCURSOR - yytext;
		{ return T_DOT; }
yy278:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy532;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS; }
yy280:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy530;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS; }
yy282:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '*') goto yy524;
		if (yych == '=') goto yy526;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL; }
yy284:
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '.') {
			if (yych == '*') goto yy518;
		} else {
			if (yych <= '/') goto yy520;
			if (yych == '=') goto yy522;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_DIV; }
yy286:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy516;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD; }
yy288:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy514;
		yyleng = YYCURSOR - yytext;
		{ return T_ASSIGN; }
yy290:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy512;
yy291:
		yyleng = YYCURSOR - yytext;
		{ return yoLexChar(parser, parserNode); }
yy292:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '|') goto yy510;
		yyleng = YYCURSOR - yytext;
		{ return T_OR; }
yy294:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '&') goto yy508;
		yyleng = YYCURSOR - yytext;
		{ return T_AND; }
yy296:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '^') goto yy506;
		yyleng = YYCURSOR - yytext;
		{ return T_XOR; }
yy298:
		yych = *++YYCURSOR;
		if (yych == '=') goto yy504;
		goto yy291;
yy299:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy502;
		yyleng = YYCURSOR - yytext;
		{ return T_LT; }
yy301:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy500;
		yyleng = YYCURSOR - yytext;
		{ return T_GT; }
yy303:
		++YYCURSOR;
		yych = *YYCURSOR;
		goto yy499;
yy304:
		yyleng = YYCURSOR - yytext;
		{ goto restart; }
yy305:
		++YYCURSOR;
yy306:
		yyleng = YYCURSOR - yytext;
		{ return T_NEWLINE; }
yy307:
		yych = *++YYCURSOR;
		if (yych == '\n') goto yy497;
		goto yy306;
yy308:
		++YYCURSOR;
		switch ((yych = *YYCURSOR)) {
		case 'a':	goto yy470;
		case 'h':	goto yy471;
		case 'l':	goto yy472;
		case 'o':	goto yy473;
		default:	goto yy356;
		}
yy309:
		yyleng = YYCURSOR - yytext;
		{ return yoLexName(parser, parserNode); }
yy310:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy462;
		if (yych == 'y') goto yy463;
		goto yy356;
yy311:
		yych = *++YYCURSOR;
		if (yych == 'f') goto yy446;
		if (yych == 'n') goto yy448;
		goto yy356;
yy312:
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy427;
		goto yy356;
yy313:
		yych = *++YYCURSOR;
		if (yych <= 'k') {
			if (yych == 'a') goto yy407;
			goto yy356;
		} else {
			if (yych <= 'l') goto yy408;
			if (yych == 'u') goto yy409;
			goto yy356;
		}
yy314:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy401;
		goto yy356;
yy315:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy391;
		goto yy356;
yy316:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy383;
		if (yych == 'y') goto yy384;
		goto yy356;
yy317:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy379;
		goto yy356;
yy318:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy372;
		if (yych == 'o') goto yy373;
		goto yy356;
yy319:
		yych = *++YYCURSOR;
		if (yych == 'e') goto yy366;
		goto yy356;
yy320:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy359;
		goto yy356;
yy321:
		yych = *++YYCURSOR;
		if (yych == 's') goto yy357;
		goto yy356;
yy322:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexOpenBrace(parser); }
yy324:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexOpenBracket(parser); }
yy326:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexCloseBracket(parser); }
yy328:
		yych = *++YYCURSOR;
		goto yy356;
yy329:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= 'E') {
			if (yych <= '/') {
				if (yych == '.') goto yy337;
			} else {
				if (yych <= '9') goto yy340;
				if (yych >= 'E') goto yy342;
			}
		} else {
			if (yych <= 'd') {
				if (yych == 'b') goto yy348;
			} else {
				if (yych <= 'e') goto yy342;
				if (yych == 'x') goto yy347;
			}
		}
yy330:
		yyleng = YYCURSOR - yytext;
		{ return yoLexDec(parser, parserNode); }
yy331:
		yyaccept = 0;
		yych = *(YYMARKER = ++YYCURSOR);
		if (yych <= '9') {
			if (yych == '.') goto yy337;
			if (yych <= '/') goto yy330;
			goto yy340;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy330;
				goto yy342;
			} else {
				if (yych == 'e') goto yy342;
				goto yy330;
			}
		}
yy332:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexSingleQuotedString(parser, parserNode); }
yy334:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return yoLexQuotedString(parser, parserNode); }
yy336:
		yych = *++YYCURSOR;
		goto yy291;
yy337:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 8) {
			goto yy337;
		}
		if (yych == 'E') goto yy342;
		if (yych == 'e') goto yy342;
yy339:
		yyleng = YYCURSOR - yytext;
		{ return yoLexFloat(parser, parserNode); }
yy340:
		yyaccept = 0;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= '9') {
			if (yych == '.') goto yy337;
			if (yych <= '/') goto yy330;
			goto yy340;
		} else {
			if (yych <= 'E') {
				if (yych <= 'D') goto yy330;
			} else {
				if (yych != 'e') goto yy330;
			}
		}
yy342:
		yych = *++YYCURSOR;
		if (yych <= ',') {
			if (yych == '+') goto yy344;
		} else {
			if (yych <= '-') goto yy344;
			if (yych <= '/') goto yy343;
			if (yych <= '9') goto yy345;
		}
yy343:
		YYCURSOR = YYMARKER;
		if (yyaccept <= 0) {
			goto yy330;
		} else {
			goto yy339;
		}
yy344:
		yych = *++YYCURSOR;
		if (yych <= '/') goto yy343;
		if (yych >= ':') goto yy343;
yy345:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yych <= '/') goto yy339;
		if (yych <= '9') goto yy345;
		goto yy339;
yy347:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy352;
		}
		goto yy343;
yy348:
		yych = *++YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy349;
		}
		goto yy343;
yy349:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 16) {
			goto yy349;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexBin(parser, parserNode); }
yy352:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
		if (yybm[0+yych] & 32) {
			goto yy352;
		}
		yyleng = YYCURSOR - yytext;
		{ return yoLexHex(parser, parserNode); }
yy355:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy356:
		if (yybm[0+yych] & 64) {
			goto yy355;
		}
		goto yy309;
yy357:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_AS; }
yy359:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy356;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '_') {
			if (yych <= '?') {
				if (yych <= '/') goto yy362;
				if (yych <= '9') goto yy355;
			} else {
				if (yych <= 'Z') goto yy355;
				if (yych >= '_') goto yy355;
			}
		} else {
			if (yych <= 'i') {
				if (yych <= '`') goto yy362;
				if (yych <= 'h') goto yy355;
				goto yy363;
			} else {
				if (yych <= 'z') goto yy355;
				if (yych >= 0x7F) goto yy355;
			}
		}
yy362:
		yyleng = YYCURSOR - yytext;
		{ return T_ELSE; }
yy363:
		yych = *++YYCURSOR;
		if (yych != 'f') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_ELSEIF; }
yy366:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_RETURN; }
yy372:
		yych = *++YYCURSOR;
		if (yych == 'r') goto yy377;
		goto yy356;
yy373:
		yych = *++YYCURSOR;
		if (yych != 'i') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'd') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VOID; }
yy377:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_VAR; }
yy379:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_NULL; }
yy383:
		yych = *++YYCURSOR;
		if (yych == 'u') goto yy388;
		goto yy356;
yy384:
		yych = *++YYCURSOR;
		if (yych != 'p') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TYPE; }
yy388:
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_TRUE; }
yy391:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy356;
		yych = *++YYCURSOR;
		if (yych == 'i') goto yy393;
		if (yych == 'u') goto yy394;
		goto yy356;
yy393:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy398;
		goto yy356;
yy394:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRUCT; }
yy398:
		yych = *++YYCURSOR;
		if (yych != 'g') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_STRING; }
yy401:
		yych = *++YYCURSOR;
		if (yych != 'u') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'b') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy407:
		yych = *++YYCURSOR;
		if (yych == 'l') goto yy423;
		goto yy356;
yy408:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy413;
		goto yy356;
yy409:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FUNC; }
yy413:
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy356;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '?') {
			if (yych <= '3') {
				if (yych <= '/') goto yy416;
				if (yych <= '2') goto yy355;
				goto yy417;
			} else {
				if (yych == '6') goto yy418;
				if (yych <= '9') goto yy355;
			}
		} else {
			if (yych <= '_') {
				if (yych <= 'Z') goto yy355;
				if (yych >= '_') goto yy355;
			} else {
				if (yych <= '`') goto yy416;
				if (yych <= 'z') goto yy355;
				if (yych >= 0x7F) goto yy355;
			}
		}
yy416:
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy417:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy421;
		goto yy356;
yy418:
		yych = *++YYCURSOR;
		if (yych != '4') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT64; }
yy421:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FLOAT32; }
yy423:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_FALSE; }
yy427:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy356;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '9') {
			if (yych <= '3') {
				if (yych <= '0') {
					if (yych >= '0') goto yy355;
				} else {
					if (yych <= '1') goto yy433;
					if (yych <= '2') goto yy355;
					goto yy434;
				}
			} else {
				if (yych <= '6') {
					if (yych <= '5') goto yy355;
					goto yy435;
				} else {
					if (yych == '8') goto yy431;
					goto yy355;
				}
			}
		} else {
			if (yych <= '`') {
				if (yych <= 'Z') {
					if (yych >= '@') goto yy355;
				} else {
					if (yych == '_') goto yy355;
				}
			} else {
				if (yych <= 'p') {
					if (yych <= 'o') goto yy355;
					goto yy436;
				} else {
					if (yych <= 'z') goto yy355;
					if (yych >= 0x7F) goto yy355;
				}
			}
		}
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_UINT64 : T_UINT32; }
yy431:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT8; }
yy433:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy444;
		goto yy356;
yy434:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy442;
		goto yy356;
yy435:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy440;
		goto yy356;
yy436:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINTPTR; }
yy440:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT64; }
yy442:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT32; }
yy444:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_UINT16; }
yy446:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_IF; }
yy448:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy356;
		++YYCURSOR;
		if ((yych = *YYCURSOR) <= '8') {
			if (yych <= '2') {
				if (yych <= '/') goto yy450;
				if (yych == '1') goto yy451;
				goto yy355;
			} else {
				if (yych <= '5') {
					if (yych <= '3') goto yy452;
					goto yy355;
				} else {
					if (yych <= '6') goto yy453;
					if (yych <= '7') goto yy355;
					goto yy454;
				}
			}
		} else {
			if (yych <= '^') {
				if (yych <= '9') goto yy355;
				if (yych <= '?') goto yy450;
				if (yych <= 'Z') goto yy355;
			} else {
				if (yych <= '`') {
					if (yych <= '_') goto yy355;
				} else {
					if (yych <= 'z') goto yy355;
					if (yych >= 0x7F) goto yy355;
				}
			}
		}
yy450:
		yyleng = YYCURSOR - yytext;
		{ return sizeof(int) == 8 ? T_INT64 : T_INT32; }
yy451:
		yych = *++YYCURSOR;
		if (yych == '6') goto yy460;
		goto yy356;
yy452:
		yych = *++YYCURSOR;
		if (yych == '2') goto yy458;
		goto yy356;
yy453:
		yych = *++YYCURSOR;
		if (yych == '4') goto yy456;
		goto yy356;
yy454:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy456:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT64; }
yy458:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT32; }
yy460:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT16; }
yy462:
		yych = *++YYCURSOR;
		if (yych == 'o') goto yy467;
		goto yy356;
yy463:
		yych = *++YYCURSOR;
		if (yych != 't') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'e') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy467:
		yych = *++YYCURSOR;
		if (yych != 'l') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_BOOL; }
yy470:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy493;
		goto yy356;
yy471:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy488;
		goto yy356;
yy472:
		yych = *++YYCURSOR;
		if (yych == 'a') goto yy484;
		goto yy356;
yy473:
		yych = *++YYCURSOR;
		if (yych != 'n') goto yy356;
		yych = *++YYCURSOR;
		if (yych <= 'r') goto yy356;
		if (yych <= 's') goto yy475;
		if (yych <= 't') goto yy476;
		goto yy356;
yy475:
		yych = *++YYCURSOR;
		if (yych == 't') goto yy482;
		goto yy356;
yy476:
		yych = *++YYCURSOR;
		if (yych != 'r') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'a') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 't') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CONTRACT; }
yy482:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CONST; }
yy484:
		yych = *++YYCURSOR;
		if (yych != 's') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 's') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CLASS; }
yy488:
		yych = *++YYCURSOR;
		if (yych == 'n') goto yy489;
		if (yych == 'r') goto yy491;
		goto yy356;
yy489:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CHAN; }
yy491:
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_INT8; }
yy493:
		yych = *++YYCURSOR;
		if (yych != 'c') goto yy356;
		yych = *++YYCURSOR;
		if (yych != 'h') goto yy356;
		++YYCURSOR;
		if (yybm[0+(yych = *YYCURSOR)] & 64) {
			goto yy355;
		}
		yyleng = YYCURSOR - yytext;
		{ return T_CATCH; }
yy497:
		yych = *++YYCURSOR;
		goto yy306;
yy498:
		++YYCURSOR;
		YYFILL(1);
		yych = *YYCURSOR;
yy499:
		if (yybm[0+yych] & 128) {
			goto yy498;
		}
		goto yy304;
yy500:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_GE; }
yy502:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_LE; }
yy504:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_NE; }
yy506:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_XORXOR; }
yy508:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ANDAND; }
yy510:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_OROR; }
yy512:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DECL_ASSIGN; }
yy514:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_EQ; }
yy516:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MOD_ASSIGN; }
yy518:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexMultiLineComment(parser); goto restart; }
yy520:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ yoLexLineComment(parser); goto restart; }
yy522:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_DIV_ASSIGN; }
yy524:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '=') goto yy528;
		yyleng = YYCURSOR - yytext;
		{ return T_POW; }
yy526:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MUL_ASSIGN; }
yy528:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_POW_ASSIGN; }
yy530:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_MINUS_ASSIGN; }
yy532:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_PLUS_ASSIGN; }
yy534:
		yyaccept = 1;
		YYMARKER = ++YYCURSOR;
		YYFILL(3);
		yych = *YYCURSOR;
		if (yych <= 'D') {
			if (yych <= '/') goto yy339;
			if (yych <= '9') goto yy534;
			goto yy339;
		} else {
			if (yych <= 'E') goto yy342;
			if (yych == 'e') goto yy342;
			goto yy339;
		}
yy536:
		++YYCURSOR;
		if ((yych = *YYCURSOR) == '.') goto yy540;
		if (yych == '=') goto yy538;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT; }
yy538:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_CONCAT_ASSIGN; }
yy540:
		++YYCURSOR;
		yyleng = YYCURSOR - yytext;
		{ return T_ELLIPSIS; }
	}
}


/*
comment:
re2c:yyfill:check = 0;
<ST_YOLANG,ST_INJECT>"*?	{ goto restart; } 
<ST_YOLANG,ST_INJECT>{NEWLINE} { yoLexNewLine(parser); goto comment; }
<ST_YOLANG,ST_INJECT>{ANY_CHAR} { goto comment; }
*/
}
